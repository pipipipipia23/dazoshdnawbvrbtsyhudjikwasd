print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")


print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")


print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")


print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")


print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
print("A")
if getgenv().hiep then
    if not game:IsLoaded() then game.Loaded:Wait() end

    repeat wait() until getgenv().sendmail ~= true and getgenv().sendbank ~= true 
    getgenv().checked = 0
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game.Players
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game.Players.LocalPlayer
    repeat wait(1) 
    
    until game.ReplicatedStorage
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Players").LocalPlayer.PlayerGui.Main.Right
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Workspace"):FindFirstChild("__MAP")
    local services = setmetatable({}, {
        __index = function(_, service)
            return game:GetService(service)
        end,
    })
    
    local lib = {}
    local utils = {}
    
    utils.random = function(_length)
        local characters = "abcdefghijklmnopqrstuvwxyz1234567890"
        characters = string.split(characters, "")
                
        local randomString = ""
                
        for i = 1, _length do
            local i = math.random(1, #characters)
                    
            if (not tonumber(characters[i])) then
                local uppercase = math.random(1, 2) == 2 and true or false
                randomString = randomString .. (uppercase and characters[i]:upper() or characters[i])
            else
                randomString = randomString .. characters[i]
            end
        end
                
        return randomString
    end
    
    utils.create = function(class, prop)
        local obj = Instance.new(class)
            
        for prop, v in next, prop do
                    obj[prop] = v
        end
            
        pcall(function()
            obj.AutoButtonColor = false
        end)
        
        obj.Name = utils.random(16)
            
        return obj
    end
    
    utils.tween = function(obj, info, properties, callback)
        local anim = services.TweenService:Create(obj, TweenInfo.new(unpack(info)), properties)
        anim:Play()
    
        if callback then
            anim.Completed:Connect(callback)
        end
    
        return anim
    end
    
    utils.dragify = function(object, hoverobj, speed, additionalObject)
        local start, objectPosition, dragging
    
        speed = speed or 0
    
        hoverobj.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                start = input.Position
                objectPosition = object.Position
            end
        end)
    
        hoverobj.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
    
        services.UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
                utils.tween(object, { speed }, {
                    Position = UDim2.new(
                        objectPosition.X.Scale,
                        objectPosition.X.Offset + (input.Position - start).X,
                        objectPosition.Y.Scale,
                        objectPosition.Y.Offset + (input.Position - start).Y
                    ),
                })
                utils.tween(additionalObject, { speed + 0.0000001 }, {
                    Position = UDim2.new(
                        objectPosition.X.Scale,
                        objectPosition.X.Offset + (input.Position - start).X,
                        objectPosition.Y.Scale,
                        objectPosition.Y.Offset + (input.Position - start).Y
                    ),
                })
            end
        end)
    end
    
    utils.updatesize = function(uil, obj)
        local Property = "CanvasSize"
    
        if not obj:IsA("ScrollingFrame") then
            Property = "Size"
        end
    
        local cS = uil.AbsoluteContentSize
    
        game.TweenService
            :Create(obj, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                [Property] = UDim2.new(
                    Property == "Size" and obj.Size.X.Scale or 0,
                    cS.X,
                    Property == "Size" and obj.Size.Y.Scale or 0,
                    cS.Y + 50
                ),
            })
            :Play()
    end
    
    -- // Main Functions
    
    lib.createWindow = function()
        local ScreenGui = utils.create('ScreenGui', {
            Parent = game:GetService('CoreGui'),
            ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
            ResetOnSpawn = false,
            DisplayOrder = 9
        })
    
        local BackgroundFrame = utils.create('Frame', {
            Parent = ScreenGui,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(27, 27, 25),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(0, 400, 0, 270),
        })
    
        utils.create('UICorner', {
            CornerRadius = UDim.new(0, 12),
            Parent = BackgroundFrame,
        })
    
        local BackgroundShadow = utils.create('ImageLabel', {
            Parent = BackgroundFrame,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.499853075, 0, 0.496137619, 0),
            Size = UDim2.new(1, 0, 1, 0),
            ZIndex = 0,
            Image = "rbxassetid://8992584561",
            ImageColor3 = Color3.fromRGB(33, 32, 46),
            ImageTransparency = 0.100,
            ScaleType = Enum.ScaleType.Slice,
            SliceCenter = Rect.new(73, 73, 73, 73),
            SliceScale = 0.980,
        })
    
        local BackgroundPlasma = utils.create('ImageLabel', {
            Name = "BackgroundPlasma",
            Parent = BackgroundFrame,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.482142866, 10, 0.477272719, 20),
            Size = UDim2.new(1, 0, 1, 0),
            Image = "rbxassetid://8992584561",
            ImageColor3 = Color3.fromRGB(196, 167, 231),
            SliceCenter = Rect.new(73, 73, 73, 73),
            SliceScale = 0.980,
        })
    
        local BackgroundPlasma_2 = utils.create('ImageLabel', {
                Name = "BackgroundPlasma",
                Parent = BackgroundFrame,
                AnchorPoint = Vector2.new(0.5, 0.5),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Position = UDim2.new(0.482142866, 10, 0.477272719, 20),
                Size = UDim2.new(1, 0, 1, 0),
                Image = "rbxassetid://8992584561",
                ImageColor3 = Color3.fromRGB(196, 167, 231),
                SliceCenter = Rect.new(73, 73, 73, 73),
                SliceScale = 0.980,
        })
    
        local CanvasGroup = utils.create('CanvasGroup', {
            Parent = ScreenGui,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(0, 400, 0, 270),
            ZIndex = 2,
        })
    
        local UIStroke = utils.create('UIStroke', {
            Color = Color3.fromRGB(86, 82, 110),
            Thickness = 2.000,
            Parent = CanvasGroup,
        })
    
        local MainFrame = utils.create('Frame', {
            Name = "MainFrame",
            Parent = CanvasGroup,
            BackgroundColor3 = Color3.fromRGB(25, 23, 28),
            BackgroundTransparency = 0.200,
            Size = UDim2.new(1, 0, 1, 0)
        })
        local UICorner = utils.create('UICorner', {
                CornerRadius = UDim.new(0, 12),
                Parent = MainFrame,
        })
        local Content = utils.create('Frame', {
                Name = "Content",
                Parent = MainFrame,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                BorderColor3 = Color3.fromRGB(0, 0, 0),
                BorderSizePixel = 0,
                Size = UDim2.new(1, 0, 1, 0),
        })
        local TopBar = utils.create('Frame', {
                Name = "TopBar",
                Parent = Content,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Size = UDim2.new(1, 0, 0, 36),
        })
        local xSeperator = utils.create('Frame', {
                Name = "xSeperator",
                Parent = TopBar,
                BackgroundColor3 = Color3.fromRGB(196, 167, 231),
                BackgroundTransparency = 0.800,
                BorderSizePixel = 0,
                Position = UDim2.new(0, 0, 1, 0),
                Size = UDim2.new(1, 0, 0, 1),
        })
        local Buttons = utils.create('Frame', {
                Name = "Buttons",
                Parent = TopBar,
                AnchorPoint = Vector2.new(0, 0.5),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Position = UDim2.new(0, 10, 0.5, 0),
                Size = UDim2.new(0, 100, 0, 10),
        })
        local UIListLayout = utils.create('UIListLayout', {
                Parent = Buttons,
                FillDirection = Enum.FillDirection.Horizontal,
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 5),
        })
        local Close = utils.create('Frame', {
                Name = "Close",
                Parent = Buttons,
                BackgroundColor3 = Color3.fromRGB(235, 111, 146),
                BackgroundTransparency = 0.300,
                Size = UDim2.new(0, 10, 0, 10),
        })
        local UICorner_2 = utils.create('UICorner', {
                CornerRadius = UDim.new(0, 3192),
                Parent = Close,
        })
        local Minimize = utils.create('Frame', {
                Name = "Minimize",
                Parent = Buttons,
                BackgroundColor3 = Color3.fromRGB(246, 193, 119),
                BackgroundTransparency = 0.300,
                Size = UDim2.new(0, 10, 0, 10),
        })
        local UICorner_3 = utils.create('UICorner', {
                CornerRadius = UDim.new(0, 3192),
                Parent = Minimize,
        })
        local ImageButton = utils.create('ImageButton', {
                Parent = TopBar,
                AnchorPoint = Vector2.new(0.5, 0.5),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Position = UDim2.new(0.930000007, 0, 0.5, 0),
                Size = UDim2.new(0, 15, 0, 15),
                AutoButtonColor = false,
                Image = "rbxassetid://11422927659",
                ImageColor3 = Color3.fromRGB(110, 106, 134),
        })
        local Info = utils.create('Frame', {
                Name = "Info",
                Parent = Content,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                BorderColor3 = Color3.fromRGB(0, 0, 0),
                BorderSizePixel = 0,
                Position = UDim2.new(0, 0, 0.137037039, 0),
                Size = UDim2.new(1, 0, 0.862962961, 0),
        })
        local UIPadding = utils.create('UIPadding', {
                Parent = Info,
                PaddingLeft = UDim.new(0, 10),
                PaddingTop = UDim.new(0, 12),
        })
        local UIListLayout_2 = utils.create('UIListLayout', {
                Parent = Info,
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 3),
        })
    
        utils.dragify(CanvasGroup, TopBar, 0.08, BackgroundFrame)
    
        local window = {}
    
        window.createField = function(name, value)
            local Button = utils.create('Frame', {
                Name = "Button",
                Parent = Info,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Size = UDim2.new(1, 0, 0, 40),
                -- // Generated by natsu.ps1#4977's plugin
            })
            local Frame = utils.create('Frame', {
                    Parent = Button,
                    AnchorPoint = Vector2.new(0.5, 0.5),
                    BackgroundColor3 = Color3.fromRGB(25, 23, 28),
                    BackgroundTransparency = 0.900,
                    Position = UDim2.new(0.5, -5, 0.5, 0),
                    Size = UDim2.new(0.899999976, 0, 0.899999976, 0),
                    -- // Generated by natsu.ps1#4977's plugin
            })
            local UICorner = utils.create('UICorner', {
                    CornerRadius = UDim.new(0, 6),
                    Parent = Frame,
                    -- // Generated by natsu.ps1#4977's plugin
            })
            local UIStroke = utils.create('UIStroke', {
                    Color = Color3.fromRGB(196, 167, 231),
                    Transparency = 0.800,
                    Parent = Frame,
                    -- // Generated by natsu.ps1#4977's plugin
            })
            local TextLabel = utils.create('TextLabel', {
                    Parent = Frame,
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0, 13, 0, 0),
                    Size = UDim2.new(0, 120, 1, 0),
                    Font = Enum.Font.Gotham,
                    Text = name .. ": " .. value,
                    TextColor3 = Color3.fromRGB(224, 222, 244),
                    TextSize = 14.000,
                    TextTransparency = 0.200,
                    TextXAlignment = Enum.TextXAlignment.Left,
                    -- // Generated by natsu.ps1#4977's plugin
            })
    
            CanvasGroup.Size = UDim2.new(CanvasGroup.Size.X.Scale, CanvasGroup.Size.X.Offset, CanvasGroup.Size.Y.Scale, CanvasGroup.Size.Y.Offset + 40)
    
            local shit = {}
    
            shit.updateInfo = function(_value)
                TextLabel.Text = name .. ": " .. _value
            end
    
            return shit
        end
    
        return window
    end
    
    local window = lib.createWindow()
    local Hubname = window.createField("Hub Name: ", "DaNeKo Hub")
    local Status = window.createField("Status: ", "Loaded")
    local Error = window.createField("Check: ", "None")
    local Error2 = window.createField("Check2: ", "None")
    local Statusfarm = window.createField("Statusfarm: ", "None")
    local Gem = window.createField("Gem: ", "None")
    local Fruit = window.createField("Fruit: ", "None")
    ----- UI lib
    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
    local Client = require(game.ReplicatedStorage.Library.Client)
    local loirequire, kcj = pcall(function()
        local Library = require(game:GetService("ReplicatedStorage").Library)
    end)
    if loirequire == false then
        Status.updateInfo("Error! Fail Require module, Wait rejoin")
        wait(4)
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
    else
        local Library = require(game:GetService("ReplicatedStorage").Library)
    end
    local Library = require(game:GetService("ReplicatedStorage").Library)
    local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
    print("dau cac ngu")
    hookfunction(debug.getupvalue(Client.Network.Fire,1),function() return true end)
    hookfunction(debug.getupvalue(Client.Network.Invoke,1),function() return true end)
    hookfunction(debug.getupvalue(Library.Network.Invoke, 1), function() return true end)
    hookfunction(debug.getupvalue(Library.Network.Fire, 1), function() return true end)
    v1.WorldCmds.CanDoAction = function() return true end
    local hihi = getsenv(game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.GUIs.Teleport)
    local plr = game.Players.LocalPlayer
    local controls = require(game.Players.LocalPlayer.PlayerScripts.PlayerModule):GetControls()
    function getdafarm()
        return #Client.PetCmds.GetEquipped()
    end
    local vitribank = Vector3.new(229.9514923095703, 98.11483001708984, 360.9400329589844)
    function bankloaded()
        return game:GetService("Players").LocalPlayer.PlayerGui.BankLoading.Enabled
    end
    Client.Network.Invoke("Equip Best Pets")
    yowtf = 0
    spawn(function()
        while true do wait(1)
            pcall(function()
                if (plr.Character.HumanoidRootPart.Position - vitribank).Magnitude < 10 then
                    yowtf = yowtf + 1
                    Error.updateInfo("Near Bank Time: " .. tostring(yowtf) .. " 300s rejoin")
                    if yowtf == 60 * 3 then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
                    end
                else
                    yowtf = yowtf - 1
                end
            end)
        end
    end)
    yowtf1 = 0
    spawn(function()
        while true do wait(1)
            pcall(function()
                if bankloaded() then
                    yowtf1 = yowtf1 + 1
                    Error.updateInfo("Load Bank Time: " .. tostring(yowtf1) .. " 300s rejoin")
                    if yowtf1 == 60 * 3 then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
                    end
                else
                    yowtf1 = yowtf1 - 1
                end
            end)
        end
    end)
    local originalPlay = Library.Audio.Play
    Library.Audio.Play = function(...) 
    if checkcaller() then
        local audioId, parent, pitch, volume, maxDistance, group, looped, timePosition = unpack({ ... })
        if type(audioId) == "table" then
            audioId = audioId[Random.new():NextInteger(1, #audioId)]
        end
        if not parent then
            warn("Parent cannot be nil", debug.traceback())
            return nil
        end
        if audioId == 0 then return nil end
        
        if type(audioId) == "number" or not string.find(audioId, "rbxassetid://", 1, true) then
            audioId = "rbxassetid://" .. audioId
        end
        if pitch and type(pitch) == "table" then
            pitch = Random.new():NextNumber(unpack(pitch))
        end
        if volume and type(volume) == "table" then
            volume = Random.new():NextNumber(unpack(volume))
        end
        if group then
            local soundGroup = game.SoundService:FindFirstChild(group) or nil
        else
            soundGroup = nil
        end
        if timePosition == nil then
            timePosition = 0
        else
            timePosition = timePosition
        end
        local isGargabe = false
        if not pcall(function() local _ = parent.Parent end) then
            local newParent = parent
            pcall(function()
                newParent = CFrame.new(newParent)
            end)
            parent = Instance.new("Part")
            parent.Anchored = true
            parent.CanCollide = false
            parent.CFrame = newParent
            parent.Size = Vector3.new()
            parent.Transparency = 1
            parent.Parent = workspace:WaitForChild("__DEBRIS")
            isGargabe = true
        end
        local sound = Instance.new("Sound")
        sound.SoundId = audioId
        sound.Name = "sound-" .. audioId
        sound.Pitch = pitch and 1
        sound.Volume = volume and 0.5
        sound.SoundGroup = soundGroup
        sound.Looped = looped and false
        sound.MaxDistance = maxDistance and 100
        sound.TimePosition = timePosition
        sound.RollOffMode = Enum.RollOffMode.Linear
        sound.Parent = parent
        if not require(game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Client")).Settings.SoundsEnabled then
            sound:SetAttribute("CachedVolume", sound.Volume)
            sound.Volume = 0
        end
        sound:Play()
        getfenv(originalPlay).AddToGarbageCollection(sound, isGargabe)
        return sound
    end
    return originalPlay(...)
    end
    ---------------------------------------------------------------------------------------------------
    if v1.WorldCmds.HasArea("Mystic Mine") == false then
        getgenv().chestselect = {"World Yellow Lucky Block", "World Blue Lucky Block", "World Pink Lucky Block", "World Rainbow Lucky Block"} -- "World Yellow Lucky Block", "World Blue Lucky Block", "World Pink Lucky Block", "World Rainbow Lucky Block" (support lucky area block)
        _G.vitribanchon = 1 -- 1->5 (only lucky area)
        getgenv().farmabcxyz = "double" -- single
        getgenv().methodchange = "So Luong Fruit" -- Check Theo Thoi Gian ( day la method doi map)
        getgenv().areafarm1 = "Pixel Alps" -- Axolotl Deep Ocean
        getgenv().timemap1 = 100 -- Min, hoac so luong fruit
        getgenv().areafarm2 = getgenv().unlock_spawn_to_map
        getgenv().timemap2 = 200 -- Min, hoac so luong fruit
        getgenv().tgianne = 1
        getgenv().methodhutgem = "Old" -- new
        getgenv().startresetfruit = true
        getgenv().resetfruit30min = true
        getgenv().countdaycare = 10
        getgenv().autodaycare = false
        getgenv().soluonggem = 70000000000
        getgenv().autosendgem = false
        getgenv().fruitslect = {"Orange", "Apple"}
        getgenv().methodautofarm = "New"
        getgenv().turnonfarmgiant = false
        getgenv().whitescreen = false
        getgenv().autodaily = true
        getgenv().walkauto = true
        getgenv().farmranknek = true
        -- getgenv().bankdefault = "dd27e3f7-ffa0-48d7-a958-d9b643d99064"
        local vitricuabank = Vector3.new(231.22198486328125, 98.11483001708984, 358.1041259765625)
        local vitrimail = Vector3.new(254.9382781982422, 98.11483001708984, 352.31182861328125)
        local v48 = v1.Save.Get()
        function havenearbank()
            for i,v in pairs(game.Players:GetChildren()) do
                if v.Name ~= plr.Name then
                    if (v.Character.HumanoidRootPart.Position - vitricuabank).Magnitude < 10 then
                        Statusfarm.updateInfo("Have player near bank (wait)")
                    end
                end
            end
            return false
        end
        function teleportto(texta)
            print(hihi.Teleport(texta,true))
        end
        function indexpet()
            a = 0
            for i,v in pairs(v48.Pets) do
                if v48.Pets[i]["s"] >= 100000000000000000 then
                    a = a + 1   
                end
            end
            return a
        end
    
        function getmybank()
            print("Cac")
            if bankloaded() == false then
                if getgenv().doneleave ~= true then
                    for i,v in pairs(Client.Network.Invoke("Get My Banks")) do
                        if v.Owner ~= game.Players.LocalPlayer.UserId then
                            return v.BUID
                        end
                    end
                    return false
                end
                return false
            end
            return false
        end
    
        local vitrirs = Vector3.new(232.1697235107422, 98.11483001708984, 312.91363525390625)
        local vitribank = Vector3.new(229.9514923095703, 98.11483001708984, 360.9400329589844)
        local vitrimerchan = Vector3.new(-389.8507995605469, 98.14244842529297, 90.26082611083984)
        function checknearbank()
            if (plr.Character.HumanoidRootPart.Position - vitribank).Magnitude < 10 then
                return true
            end
            return false
        end
    
        local v17 = v1.Directory.Areas["Shop"]
        function autofixUI()
            if checknearbank() and checkisbank() == false then
                tweenfarasm(vitrirs,CFrame.new(vitrirs))
                tweenfarasm(vitribank,CFrame.new(vitribank))
            end
        end
        function teleportto(texta)
            print(hihi.Teleport(texta,true))
        end
        function fireButton1(button)
            for i,signal in next, getconnections(button.Activated) do 
                signal:Function()
            end
        end
        function clickman(a)
            spawn(function()
                fireButton1(a)
            end)
        end
        function getinvite()
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
                if string.find(v.Name, "INVITE") then
                    local a = string.gsub(v.Player.Text, "@", "")
                    print(getgenv().Nameaccmain, a)
                    if a == getgenv().Nameaccmain then
                        return v
                    end
                end
            end
            return false
        end
        function stringfind(a,b)
            if string.find(a,b) then
                return true
            end
            return false
        end
        function getinvite2()
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
                if not stringfind(v.Name, "INVITE") then
                    if string.len(v.Name) > 30 then
                        if v.Owner.Text == tostring("@" .. getgenv().Nameaccmain) then
                            return v
                        end
                    end
                end
            end
            return false
        end
        function ismes()
            return game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled
        end
        function checkisbank()
            return game:GetService("Players").LocalPlayer.PlayerGui.Bank.Enabled
        end
        local v17 = v1.Directory.Areas["Shop"]
        function tweenfarasm(targetPos, targetCFrame)
            if v1.WorldCmds.Get() == v17.world then
                local gay = (targetPos-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                local Tween = game:GetService('TweenService'):Create(
                    game.Players.LocalPlayer.Character.HumanoidRootPart,
                    TweenInfo.new(
                        gay / 50, 
                        Enum.EasingStyle.Linear
                    ),
                    {CFrame = targetCFrame * CFrame.new(0,0,0)}
                )
                Tween:Play()
                Tween.Completed:Wait()
            else
                teleportto("Shop")
            end
        end 
    
        function haveslot()
            local dbuaz = game:GetService("Players").LocalPlayer.PlayerGui.Main.Bottom.Inventory.Equipped.Text
            local slotpet = string.split(dbuaz, "/")
            if tonumber(slotpet[2]) >= 11 then
                return true
            end
            return false
        end
    
        function autocollectslot()
            if haveslot() == false then
                print(Client.Network.Invoke("Redeem Pet Collection"))
            end
            return true
        end
    
        repeat wait(1)
            print("Azaza")
            Statusfarm.updateInfo("Collect Slot")
            autocollectslot()
        until haveslot() == true
        Statusfarm.updateInfo("Collect Slot Done")
        function azowtf()
            pcall(function()
                if havenearbank() == false then
                    if indexpet() < 11 then
                        Statusfarm.updateInfo("Go to bank")
                        if getmybank() == false then
                            if v1.WorldCmds.Get() == v17.world then
                                if getmybank() == false then
                                    if checkisbank() == false then
                                        if v1.WorldCmds.Get() == v17.world then
                                            autofixUI()
                                            if not checknearbank() then
                                                tweenfarasm(vitribank,CFrame.new(vitribank))
                                            end
                                        else
                                            teleportto("Shop")
                                        end
                                    else
                                        if not checknearbank() then
                                            tweenfarasm(vitribank,CFrame.new(vitribank))
                                        else
                                            if getinvite() ~= false then
                                                print("get success")
                                                clickman(getinvite())
                                            end
                                            wait(5)
                                            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Do you want to accept this invite?" then
                                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                                            else
                                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
                                            end
                                            wait(2)
                                            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                                            end
                                            Statusfarm.updateInfo("Wait send gem")
                                            wait(10)
                                            Client.Network.Invoke("Bank Deposit",getmybank(),{} ,get("Diamonds"))
                                        end
                                    end
                                end
                            else
                                teleportto("Shop")
                            end
                        else
                            Statusfarm.updateInfo("Setup get 11 pet")
                            getgenv().gettablepet = {}
                            getgenv().toiuutable = Client.Network.Invoke("Get Bank", getmybank()).Storage.Pets
                            for i,v in pairs(toiuutable) do
                                if #getgenv().gettablepet < 11 then
                                    table.insert(getgenv().gettablepet, v.uid)
                                end
                            end
                            Client.Network.Invoke("Bank Withdraw",getmybank(),getgenv().gettablepet ,100000000)
                        end
                    else
                        Client.Network.Invoke("Equip Best Pets")
                    end
                end
            end)
        end
    
        while indexpet() < 11 do wait(5)
            local a,b = pcall(function()
                if v1.WorldCmds.Get() == v17.world then
                    azowtf()
                    Statusfarm.updateInfo("Start Get Pet")
                else
                    teleportto("Shop")
                end
            end)
            print(a,b)
        end
    
        function azazazaz()
            if v1.WorldCmds.Get() == v17.world then
                if v1.WorldCmds.Get() == v17.world then
                    if checkisbank() == false then
                        if v1.WorldCmds.Get() == v17.world then
                            autofixUI()
                            if not checknearbank() then
                                tweenfarasm(vitribank,CFrame.new(vitribank))
                            end
                        else
                            teleportto("Shop")
                        end
                    else
                        if not checknearbank() then
                            tweenfarasm(vitribank,CFrame.new(vitribank))
                        else
                            if getinvite2() ~= false then
                                clickman(getinvite2()) 
                                wait(3)
                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Container.Bank.Bottom.Leave)
                                wait(3)
                                if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Are you sure you want to leave this bank?" then
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                                    Statusfarm.updateInfo("Leave Bank Success!")
                                    getgenv().doneleave = true
                                else
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
                                end
                                wait(2)
                                if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                                end
                                wait(10)
                            end
                        end
                    end
                else
                    teleportto("Shop")
                end
            end
        end
    
        while (getgenv().doneleave ~= true and getmybank() ~= false) do wait(5)
            pcall(function()
                Statusfarm.updateInfo("Leave Bank!")
                tweenfarasm(vitricuabank, CFrame.new(vitricuabank))
                azazazaz()
            end)
        end
    
        Client.Network.Invoke("Equip Best Pets")
    
        function checkhasmail()
            if Client.Network.Invoke("Get Mail") then
                return true
            end
            return false
        end
    
        function havemail()
            if checkhasmail() then
                for i,v in pairs(Client.Network.Invoke("Get Mail").Inbox) do
                    return true
                end
            end
            return false
        end
    
        while havemail() do wait(5)
            pcall(function()
                if v1.WorldCmds.Get() == v17.world then
                    Statusfarm.updateInfo("Claim Mail")
                    tweenfarasm(vitrimail, CFrame.new(vitrimail))
                    wait(5)
                    Client.Network.Invoke("Claim All Mail")
                else
                    teleportto("Shop")
                end
            end)
        end
    
        local tablecoins = {}
    
        local a = require(game:GetService("ReplicatedStorage").__DIRECTORY.Upgrades.Upgrades)
    
        for i,v in pairs(a) do
            if v.currency == "Diamonds" then
                table.insert(tablecoins, i)
            end
        end
    
        function getupr()
            for i,v in pairs(tablecoins) do
                if Library.Save.Get().Upgrades[v] == nil or Library.Save.Get().Upgrades[v] < 5 then
                    return v 
                end
            end
            return false
        end
    
        while getupr() ~= false do wait(1)
            pcall(function()
                tweenfarasm(vitrimerchan, CFrame.new(vitrimerchan))
                if v1.WorldCmds.Get() == v17.world then
                    Statusfarm.updateInfo("Auto Upgrade diamond merchan")
                    Client.Network.Invoke("Buy Upgrade", getupr())
                end
            end)
        end
    
        ----------------------------------------------------------------------------------------------------
    
        function autoupdate2()
            getgenv().petsimz = {}
            if getgenv().methodautofarm == "Old" then
            else
                local Pets = Client.PetCmds.GetEquipped()
                local cac = 0
                local a = {}
                local b = {}
                for _, Pet in pairs(Pets) do
                    table.insert(b, Pet.uid)
                end
                for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                    if v.a == getgenv().mapdefault then
                        if workspace.__THINGS.Coins:FindFirstChild(i) then
                            table.insert(a,i)
                        end
                    end
                end
                local result = {}
                for i = 1, math.min(#a, #b) do
                    result[a[i]] = b[i]
                end
                for key, value in pairs(result) do
                    getgenv().petsimz[value] = key
                end
                return getgenv().petsimz
            end
        end
    
        function checkgaint()
            if getgenv().turnonfarmgiant == true then
                for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                    if v.a == "Mystic Mine" and string.find(v.n, "Giant") then
                        if workspace.__THINGS.Coins:FindFirstChild(i) then
                            return {i,v.p}
                        end
                    end
                end
            end
            return false
        end
    
        local vitrilucky = {
            ["1"] = CFrame.new(-278.0175476074219, 280.28961181640625, 1582.909423828125),
            ["2"] = CFrame.new(-142.0844268798828, 205.1637420654297, 1621.3187255859375),
            ["3"] = CFrame.new(-41.142391204833984, 190.16372680664062, 1540.5394287109375),
            ["4"] = CFrame.new(-318.45367431640625, 255.66372680664062, 1383.4219970703125),
            ["5"] = CFrame.new(-186.7466583251953, 205.16372680664062, 1393.80029296875),
        }
    
        function teleportto(texta)
            print(texta)
            print(hihi.Teleport(texta,true))
        end
    
        local adudarkqua = {
            ["Axolotl Deep Ocean"] = Vector3.new(4250.3017578125, -12.059213638305664, 3788.037353515625),
            ["Mystic Mine"] = Vector3.new(9021.90234375, -33.249011993408203, 2506.343994140625),
            ["Pixel Alps"] = Vector3.new(3897.318115234375, -39.473529815673828, 2440.701904296875),
        }
    
        function createnew(name, vector)
            local part = Instance.new("Part",game.Workspace)
            part.Name = name
            part.Position = vector
            part.Size = Vector3.new(60, 3, 65)
            part.Anchored = true
        end
    
        for i,v in pairs(adudarkqua) do
            createnew(i, v)
        end
    
        function aasda()
            if checkgaint() == false or getgenv().mapdefault == "Axolotl Deep Ocean" then
                if getgenv().mapdefault == "Lucky Block Area" then
                    local v17 = v1.Directory.Areas[getgenv().mapdefault]
                    if v1.WorldCmds.Get() ~= v17.world then
                        teleportto(getgenv().mapdefault)
                    else
                        plr.Character.HumanoidRootPart.CFrame = vitrilucky[tostring(_G.vitribanchon)]
                    end
                    for i,v in pairs(autoupdate2()) do
                        Client.Network.Invoke('Join Coin', v, {i})
                        Client.Network.Fire('Farm Coin', v, i)
                    end
                else
                    local v17 = v1.Directory.Areas[getgenv().mapdefault]
                    if v1.WorldCmds.Get() == v17.world and adudarkqua[getgenv().mapdefault] and adudarkqua[getgenv().mapdefault] ~= nil then
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - adudarkqua[getgenv().mapdefault]).Magnitude > 20 then
                            plr.Character.HumanoidRootPart.CFrame = CFrame.new(adudarkqua[getgenv().mapdefault]) * CFrame.new(0,10,0)
                        end
                    else
                        teleportto(getgenv().mapdefault)
                    end
                    Statusfarm.updateInfo("Farm Fruit, Unlock Map")
                    for i,v in pairs(autoupdate2()) do
                        Client.Network.Invoke('Join Coin', v, {i})
                        Client.Network.Fire('Farm Coin', v, i)
                    end
                end
            else
                getgenv().autowalkne = false
                plr.Character.HumanoidRootPart.CFrame = CFrame.new(checkgaint()[2])
                for i,v in pairs(Client.PetCmds.GetEquipped()) do
                    Client.Network.Invoke('Join Coin', checkgaint()[1], {v.uid})
                    Client.Network.Fire('Farm Coin', checkgaint()[1], v.uid)
                end
            end
        end
    
        local itemboost = {
            "Triple Coins",
            "Triple Damage",
            "Super Lucky",
            "Ultra Lucky"
        }
    
        function getboost()
            local v48 = v1.Save.Get();
            for i,v in pairs(v48.BoostsInventory) do
                if tonumber(v) ~= 0 then
                    Client.Network.Fire("Activate Boost",i)
                end
            end
        end
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        -- (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(9021.90234375, -13.249011993408203, 2506.343994140625)).Magnitude
        function autowalk()
            if getgenv().autowalkne == true then
                controls:Enable()
                local humanoid = game.Players.LocalPlayer.Character.Humanoid
                local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
                local jumpHeight = 10 -- Độ cao nhảy
                local function onTouched(part)
                    if part:IsDescendantOf(workspace) then
                        humanoid.Jump = true
                    end
                end
                rootPart.Touched:Connect(onTouched)
                local radius = 40
                local center = rootPart.Position
                if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - adudarkqua[getgenv().mapdefault]).Magnitude < 45 then
                    repeat wait(1)
                        for angle = 0, 360, 10 do
                            local radians = math.rad(angle)
                            local xOffset = math.cos(radians) * radius
                            local zOffset = math.sin(radians) * radius
                            local destination = center + Vector3.new(xOffset, 0, zOffset)
                            humanoid:MoveTo(destination)
                            humanoid.MoveToFinished:Wait()
                            humanoid.Jump = false
                            if angle == 360 then
    
                            end
                        end
                    until getgenv().autowalkne == false or (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - adudarkqua[getgenv().mapdefault]).Magnitude > 45
                else
                    humanoid:MoveTo(adudarkqua[getgenv().mapdefault])
                end
            end
        end
    
        spawn(function()
            while true do wait(1)
                pcall(autowalk)
            end
        end)
    
        spawn(function()
            while true do wait(1)
                local a,b = pcall(getboost)
            end
        end)
    
        spawn(function()
            while true do wait(getgenv().tgianne)
                if not getgenv().startdc and not getgenv().collectdc and getgenv().sendgemnek == false then
                    local a,b = pcall(aasda)
                    print(a,b)
                end
            end
        end)
    
        spawn(function()
            while true do wait()
                if getgenv().resetfruit30min then
                    if getgenv().startresetfruit == false then
                        local tickna = tick()
                        repeat wait()
                        until tick() - tickna >= 60 * 60
                        getgenv().startresetfruit = true
                    end
                end
            end
        end)
    
        function checkfruit()
            soluong = 0
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.Boosts:GetChildren()) do
                if v.Name == "Orange" or v.Name == "Apple" then
                    local zad = string.gsub(v.TimeLeft.Text , "x" ,"")
                    soluong = soluong + tonumber(zad)
                end
            end
            return soluong
        end
        getgenv().farmmerne = false
    
        function vailonluondaucatmoi()
            local mapList = {}
            local getmaptp = game:GetService("Players").LocalPlayer.PlayerGui.Teleport.Frame.LeftContainer.Holder
            for i,v in pairs(getmaptp:GetChildren()) do
                if v:IsA("TextButton") and v.Name ~= "WorldTemplate" then
                    table.insert(mapList, v.Name)
                end
            end
    
            local mapTable = {}
            for i, mapName in ipairs(mapList) do
                mapTable[i] = {name = mapName, data = {}}
            end
    
            local gateanother = {}
    
            for i, mapData in pairs(mapTable) do
                if mapData.name ~= "Hardcore" and mapData.name ~= "Claw" and mapData.name ~= "Yeet" then
                    dbuoi = nil
                    local a,b = pcall(function() 
                        dbuoi = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Areas["areas | " .. mapData.name .. " World"])
                    end)
                    if a == false then
                        dbuoi = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Areas["areas | " .. mapData.name])
                    end
                    dcac = nil
                    local a,b = pcall(function() 
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds["worlds | " .. mapData.name])
                    end)
                    if a == false then
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds[mapData.name])
                    elseif v == "Hardcore" then
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds["worlds | " .. mapData.name])
                    else
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds["worlds | " .. mapData.name])
                    end
                    for i2,v2 in pairs(dbuoi) do
                        if v2.hidden == false and v2.isVIP == nil and (v2.mult ~= 0 or dcac[mapData.name].gravity ~= nil) then
                            if v2.gate == nil then
                                if i2 ~= "Shop" then
                                    table.insert(mapData.data, {i2, 0,dcac[mapData.name].mainCurrency})
                                end
                            else
                                if v2.isShop == false then
                                    if v2.gate.currency == dcac[mapData.name].mainCurrency then
                                        table.insert(mapData.data, {i2, v2.gate.cost,v2.gate.currency})
                                    else
                                        table.insert(gateanother, {i2, v2.gate.cost, v2.gate.currency})
                                    end
                                    for i3,v3 in pairs(gateanother) do
                                        if v3[3] == dcac[mapData.name].mainCurrency then
                                            table.insert(mapData.data, {v3[1], v3[2], v3[3]})
                                            table.remove(gateanother, i3)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            for i,v in pairs(mapTable) do
                table.sort(v.data, function(a,b) return a[2] < b[2] end)
            end
            return mapTable
        end
        function getmapautoup()
            for i,v in pairs(vailonluondaucatmoi()) do
                for i1,v2 in pairs(v.data) do 
                    if v1.WorldCmds.HasArea(v2[1]) == false then
                        if i1 - 1 == 0 then
                            return {v.data[i1][1],v.data[i1][1],v.data[i1][2],v.data[i1][3]}
                        else
                            return {v.data[i1 - 1][1],v.data[i1][1],v.data[i1][2],v.data[i1][3]}
                        end
                    end
                end
            end
        end
    
        function gethugepet()
            local v48 = v1.Save.Get()
            for i,v in pairs(v48.Pets) do 
                if not tablefind(petblacklist , v48.Pets[i]["uid"]) then
                    local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                    if checkne.rarity == "Exclusive" and (v48.Pets[i].l == nil or v48.Pets[i].l == false) and v48.Pets[i].s ~= nil and v48.Pets[i].s ~= 0 then
                        return v48.Pets[i]["uid"]
                    end
                end
            end
            return false
        end
    
        spawn(function()
            while true do wait()
                pcall(function()
                    if getgenv().farmranknek == false then
                        if getgenv().startresetfruit == true then
                            getgenv().mapdefault = getgenv().areafarm1
                            local tickne = tick()
                            repeat wait()
                            until tick() - tickne > 120
                            getgenv().startresetfruit = false
                        else
                            if getgenv().farmabcxyz == "double" then
                                if getgenv().methodchange == "So Luong Fruit" then
                                    if checkfruit() >= getgenv().timemap2 then
                                        getgenv().farmmerne = true
                                        getgenv().mapdefault = getgenv().areafarm2
                                    end
                                    if checkfruit() < getgenv().timemap1 or (checkfruit() > getgenv().timemap1 and checkfruit() < getgenv().timemap2) then
                                        if getgenv().farmmerne == true then
                                            if checkfruit() <= getgenv().timemap1 then
                                                getgenv().mapdefault = getgenv().areafarm1
                                                getgenv().farmmerne = false
                                            end
                                        end
                                        if getgenv().farmmerne == false then
                                            getgenv().mapdefault = getgenv().areafarm1
                                        end
                                    end
                                else
                                    local map1 = tick()
                                    repeat wait()
                                        getgenv().mapdefault = getgenv().areafarm1
                                    until tick() - map1 >= getgenv().timemap1 * 60
                                    local map2 = tick()
                                    repeat wait()
                                        getgenv().mapdefault = getgenv().areafarm2
                                    until tick() - map2 >= getgenv().timemap2 * 60
                                end
                            else
                                getgenv().mapdefault = getgenv().areafarm1
                            end
                        end
                    else
                        if v1.WorldCmds.HasArea(getgenv().areafarm2) == true then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Right.Rank.RankName.Text ~= "PET OVERLORD" then
                                if checkfruit() >= getgenv().timemap2 then
                                    getgenv().farmmerne = true
                                    getgenv().mapdefault = getgenv().areafarm2
                                end
                                if checkfruit() < getgenv().timemap1 or (checkfruit() > getgenv().timemap1 and checkfruit() < getgenv().timemap2) then
                                    if getgenv().farmmerne == true then
                                        if checkfruit() <= getgenv().timemap1 then
                                            getgenv().mapdefault = getgenv().areafarm1
                                            getgenv().farmmerne = false
                                        end
                                    end
                                    if getgenv().farmmerne == false then
                                        getgenv().mapdefault = getgenv().areafarm1
                                    end
                                end
                            else
                                Statusfarm.updateInfo("Buy Diamond Cave")
                                if v1.WorldCmds.HasArea("Mystic Mine") == true then
                                    game:Shutdown()
                                end
                                print("a haaaa")
                                Client.Network.Invoke("Buy Area", "Diamond Mine")
                                getgenv().mapdefault = "Diamond Mine"
                                Client.Network.Invoke("Buy Area", "Paradise Cave")
                                Client.Network.Invoke("Buy Area", "Cyber Cavern")
                                function gethuge()
                                    local vloz = {}
                                    local v48 = v1.Save.Get()
                                    for i,v in pairs(v48.Pets) do 
                                        local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                                        if checkne.rarity == "Exclusive" and string.find(checkne.name , "Huge") then
                                            table.insert(vloz, v48.Pets[i]["uid"])
                                        end
                                    end
                                    return vloz
                                end
                                Client.Network.Invoke("Diamond Mine: Release Pet", "Mystic Mine", gethuge()[1])
                            end
                        else
                            getgenv().mapdefault = getmapautoup()[1]
                            if getmapautoup()[2] == "The Void" then
                                function ahasud()
                                    Client.Network.Fire("Start Hacker Portal Quests")
                                    local l__IsHardcore__2 = v1.Shared.IsHardcore;
                                    local v3 = v1.Save.Get();
                                    local v4, v5 = unpack(l__IsHardcore__2 and v3.Hardcore.HackerPortalProgress or v3.HackerPortalProgress);
                                    if 1 < v5 then
                                        v5 = 1;
                                        v4 = v1.Shared.HackerPortalQuests[1];
                                    end;
                                    local v6 = v1.Shared.HackerPortalQuests[v5];
                                    local v7 = v6 - v4
                                    return v7
                                end
                                if ahasud() > 0 then
                                    getgenv().mapdefault = "Hacker Portal"
                                else
                                    Client.Network.Invoke("Finish Hacker Portal Quest")
                                    teleportto2("The Void")
                                end
                            else
                                getgenv().mapdefault = getmapautoup()[1]
                                if get(getmapautoup()[4]) >= getmapautoup()[3] then
                                    Client.Network.Invoke("Buy Area", getmapautoup()[2])
                                end
                            end
                        end
                        wait(5)
                    end
                end)
            end
        end)
    
        local Orbs = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Orbs)
        local Lootbags = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Lootbags)
        function lootbag(v1)
            Lootbags.Collect(v1)
        end
        function lootorb(v1)
            Orbs.Collect(v1)
        end
        if getgenv().methodhutgem == "Old" then
            workspace.__THINGS.Orbs.ChildAdded:Connect(function(v)
                pcall(lootorb(v))
            end)
            workspace.__THINGS.Lootbags.ChildAdded:Connect(function(v)
                pcall(lootbag(v))
            end)
        else
            spawn(function()
                pcall(function()
                    while true do wait(.2)
                        pcall(function()
                            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
                                v.CanCollide = false
                                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                            end
                        end)
                    end
                end)
            end)
            
            spawn(function()
                pcall(function()
                    while true do wait(.2)
                        pcall(function()
                            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetChildren()) do
                                v.CanCollide = false
                                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                            end
                        end)
                    end
                end)
            end)
        end
    
        function ahih1i(num)
            if num == 0 then
                return
            end
            local v48 = v1.Save.Get()
            local petmain = {}
            local petblacklist = {}
            getgenv().resultpet = {}
            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Pets:GetChildren()) do
                table.insert(petblacklist, v.Name)
            end
            for i,v in pairs(v48.Pets) do 
                if not table.find(petblacklist , v48.Pets[i]["uid"]) then
                    local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                    if checkne.rarity ~= "Event" then
                        table.insert(petmain, {tonumber(v48.Pets[i]["s"]), v48.Pets[i]["uid"]})
                    end
                end
            end
    
            if num == 1 and num ~= 0 then
                numreal = 1
            else
                numreal = num/2
            end
    
            for i =1 , numreal do 
                local index = 0
                local maxmath = -math.huge
                for j = 1 , #petmain do
                    if maxmath < petmain[j][1] then
                        maxmath = petmain[j][1]
                        jack5triu = petmain[j][2]
                        index = j
                    end
                end
                table.insert(resultpet , jack5triu)
                table.remove(petmain , index)
            end
        end
    
        function candaycarene()
            local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
            local v65 = v1.Save.Get()
            if v1.Shared.IsHardcore then
                v67 = v65.DaycareHardcoreQueue
            else
                v67 = v65.DaycareQueue
            end
            return #v67
        end
    
        getgenv().cacdbuoi = false
    
        function autodaycare()
            ahih1i(getgenv().countdaycare - candaycarene())
            if candaycarene() < getgenv().countdaycare and #getgenv().resultpet > 0 then
                getgenv().startdc = true
                teleportto("Spawn")
                if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                    teleportto("Spawn")
                end
                plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
                controls:Disable()
                wait(2)
                Client.Network.Invoke("Daycare: Enroll", getgenv().resultpet)
            else
                getgenv().startdc = false
            end
        end
    
        function candaycare()
            local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
            local v65 = v1.Save.Get()
            if v1.Shared.IsHardcore then
                v67 = v65.DaycareHardcoreQueue
            else
                v67 = v65.DaycareQueue
            end
            for i,v in pairs(v67) do
                return true
            end
            return false
        end
    
        function gettime()
            access = false
            local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
            local v65 = v1.Save.Get()
            if v1.Shared.IsHardcore then
                v67 = v65.DaycareHardcoreQueue
            else
                v67 = v65.DaycareQueue
            end
            for i,v in pairs(v67) do
                local u13 = v1.Shared.DaycareComputeRemainingTime(v65, v67[i])
                access = true
                if u13 > 4 then
                    return false
                end
            end
            if access == false then
                return false
            end
        end
        
    
        function collectdaycare()
            if gettime() ~= false and candaycare() then
                getgenv().collectdc = true
                teleportto("Spawn")
                if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                    teleportto("Spawn")
                end
                plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
                Client.Network.Invoke("Daycare: Claim", nil)
            else
                getgenv().collectdc = false
            end
        end
    
        spawn(function()
            while true do wait(3)
                if getgenv().countdaycare - candaycarene() ~= 0 and getgenv().autodaycare then
                    getgenv().autowalkne = false
                    pcall(autodaycare)
                else
                    getgenv().startdc = false
                end
            end
        end)
    
        spawn(function()
            while true do wait(1)
                if getgenv().autowalkne then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
                    wait(4)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
                end
            end
        end)
    
        spawn(function()
            while true do wait(5)
                if candaycare() and gettime() ~= false and getgenv().sendgemnek == false then
                    getgenv().autowalkne = false
                    pcall(collectdaycare)
                else
                    getgenv().collectdc = false
                end
            end
        end)
    
        local Save = v1.Save.Get
        local Commas = v1.Functions.Commas
    
        function get(thistype)
            if game.PlaceId == 10321372166 and string.find(string.lower(thistype), "coins") then
                return Save().HardcoreCurrency[thistype]
            else
                return Save()[thistype]
            end
        end
    
        function ComposeMail(name,Diamond)    
            return {
                Recipient = tostring(name), 
                Message = "", 
                Pets = {}, 
                Diamonds = tonumber(Diamond),
            };
        end;
        function sendneknek(a,b)
            print("adubuqua")
            print(Client.Network.Invoke("Send Mail",ComposeMail(a,b)))
        end
    
        function sendgem11()
            if get("Diamonds") >= getgenv().soluonggem + 100000 then
                Client.Network.Invoke("Buy Trading Plaza")
                getgenv().sendgemnek = true
                teleportto("Shop")
                wait(5)
                plr.Character.HumanoidRootPart.CFrame = CFrame.new(257.4012756347656, 97.88801574707031, 351.0747985839844)
                controls:Disable()
                wait(1)
                sendneknek(getgenv().Nameaccmain,getgenv().soluonggem)
            else
                getgenv().sendgemnek = false
            end
        end
    
        spawn(function()
            while true do wait(5)
                if getgenv().autosendgem then
                    getgenv().autowalkne = false
                    pcall(sendgem11)
                else
                    getgenv().sendgemnek = false
                end
            end
        end)
    
        function toiuu()
            for i,v in next, workspace:GetDescendants() do
                pcall(function()
                    v.Transparency = 1
                end)
            end
            for i,v in next, getnilinstances() do
                pcall(function()
                    v.Transparency = 1
                    for i1,v1 in next, v:GetDescendants() do
                        v1.Transparency = 1
                    end
                end)
            end
            local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
            local g = game
            local w = g.Workspace
            local l = g.Lighting
            local t = w.Terrain
            pcall(function()
                sethiddenproperty(l,"Technology",2)
                sethiddenproperty(t,"Decoration",false)
            end)
            t.WaterWaveSize = 0
            t.WaterWaveSpeed = 0
            t.WaterReflectance = 0
            t.WaterTransparency = 0
            l.GlobalShadows = 0
            l.FogEnd = 9e9
            l.Brightness = 0
            settings().Rendering.QualityLevel = "Level01"
            for i, v in pairs(w:GetDescendants()) do
                if v:IsA("BasePart") and not v:IsA("MeshPart") then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
                    v.Transparency = 1
                elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                    v.Lifetime = NumberRange.new(0)
                elseif v:IsA("Explosion") then
                    v.BlastPressure = 1
                    v.BlastRadius = 1
                elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                    v.Enabled = false
                elseif v:IsA("MeshPart") and decalsyeeted then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                    v.TextureID = 10385902758728957
                elseif v:IsA("SpecialMesh") and decalsyeeted  then
                    v.TextureId=0
                elseif v:IsA("ShirtGraphic") and decalsyeeted then
                    v.Graphic=0
                elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
                    v[v.ClassName.."Template"]=0
                end
            end
            for i = 1,#l:GetChildren() do
                e=l:GetChildren()[i]
                if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                    e.Enabled = false
                end
            end
        end
    
        toiuu()
    
        if getgenv().whitescreen then
            local RunService = game:GetService("RunService")
            RunService:Set3dRenderingEnabled(false)
        else
            local RunService = game:GetService("RunService")
            RunService:Set3dRenderingEnabled(true)
        end
    
        game.NetworkClient.ChildRemoved:Connect(function()
            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
        end)
    
        game.Players.PlayerRemoving:connect(function(plr)
            if plr == game.Players.LocalPlayer then
                game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
            end
        end)
    
        spawn(function()
            while true do wait(60)
                if getgenv().autodaily then
                    for i = 1 , 12 do
                        Client.Network.Invoke("Redeem Free Gift", i)
                        wait(2)
                    end
                end
            end
        end)
    elseif getgenv().Onlyfarmunlockmap == false and v1.WorldCmds.HasArea("Mystic Mine") == true then
        if getgenv().methodfarmfruit ~= "1" then
            getgenv().Sv = {
                fruitstatus = false,
            }
            function create()
                if not isfile("pet sim x fruit status-".. plr.Name..".json") then
                    writefile("pet sim x fruit status-".. plr.Name..".json", game:GetService("HttpService"):JSONEncode(getgenv().Sv))
                end
            end
    
            function savesetting()
                if isfile("pet sim x fruit status-".. plr.Name..".json") then
                    writefile("pet sim x fruit status-".. plr.Name..".json", game:GetService("HttpService"):JSONEncode(getgenv().Sv))
                else
                    create()
                end    
            end
    
            function loadsetting()
                if isfile("pet sim x fruit status-".. plr.Name..".json") then
                    local a,b = pcall(function()
                        getgenv().Sv = game:GetService("HttpService"):JSONDecode(readfile("pet sim x fruit status-".. plr.Name..".json"))
                    end)
                    if a == false then
                        delfile("pet sim x fruit status-".. plr.Name..".json")
                        wait(1)
                        create()
                    end
                    return getgenv().Sv
                else
                    create()
                end
            end
            create()
            loadsetting()
        end
        
    function tablefindv2(a, b)
        getgenv().getnumb = 0
        for i, v in pairs(a) do
            for i1, v1 in pairs(b) do
                if string.find(v, v1) then
                    getgenv().getnumb = getgenv().getnumb + 1
                end
            end
        end
        return getgenv().getnumb
    end
    
    function tablefind(a,b)
        if table.find(a,b) then
            return true
        end
        return false
    end
    
    function tweenfarasm(targetPos, targetCFrame)
        local gay = (targetPos-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        local Tween = game:GetService('TweenService'):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(
                gay / 300, 
                Enum.EasingStyle.Linear
            ),
            {CFrame = targetCFrame * CFrame.new(0,20,0)}
        )
        Tween:Play()
        Tween.Completed:Wait()
    end 
    
    function autoupdate2()
        getgenv().petsimz = {}
        if getgenv().methodautofarm == "Old" then
        else
            local Pets = Client.PetCmds.GetEquipped()
            local cac = 0
            local a = {}
            local b = {}
            for _, Pet in pairs(Pets) do
                table.insert(b, Pet.uid)
            end
            for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                if v.a == getgenv().mapdefault then
                    if workspace.__THINGS.Coins:FindFirstChild(i) then
                        table.insert(a,i)
                    end
                end
            end
            local result = {}
            for i = 1, math.min(#a, #b) do
                result[a[i]] = b[i]
            end
            for key, value in pairs(result) do
                getgenv().petsimz[value] = key
            end
            return getgenv().petsimz
        end
    end
    
    function checkgaint()
        if getgenv().turnonfarmgiant == true then
            for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                if v.a ~= "Axolotl Deep Ocean" and string.find(v.n, "Giant") then
                    if v.a == getgenv().mapdefault then
                        if workspace.__THINGS.Coins:FindFirstChild(i) then
                            return {i,v.p}
                        end
                    end
                end
            end
        end
        return false
    end
    
    function checkhavechest()
        for i,v in pairs(Client.Network.Invoke('Get Coins')) do
            if v.a == "Mystic Mine" then
                return true
            end
        end
        return false
    end
    
    local vitrilucky = {
        ["1"] = CFrame.new(-278.0175476074219, 280.28961181640625, 1582.909423828125),
        ["2"] = CFrame.new(-142.0844268798828, 205.1637420654297, 1621.3187255859375),
        ["3"] = CFrame.new(-41.142391204833984, 190.16372680664062, 1540.5394287109375),
        ["4"] = CFrame.new(-318.45367431640625, 255.66372680664062, 1383.4219970703125),
        ["5"] = CFrame.new(-186.7466583251953, 205.16372680664062, 1393.80029296875),
    }
    
    function teleportto(texta)
        print(hihi.Teleport(texta,true))
    end
    
    local ngohem = {
        ["Cyber Cavern"] = Vector3.new(8704,-15,3027),
        ["Mystic Mine"] = Vector3.new(9046,-14,2416),
    }
    
    function autofindchest(a)
        local cac = game:GetService("Workspace").__THINGS.Coins
        for i1,v1 in pairs(cac:GetChildren()) do
            if v1.Name == a then
                return v1
            end
        end
    end
    function autofindpet(a)
        for i1,v1 in pairs(Client.PetCmds.GetEquipped()) do
            if i1 == a then
                return v1
            end
        end
    end
    
    spawn(function()
        while true do wait(5)
            pcall(function()
                if Library.Signal.Invoke("Get Diamond Mine Collpase Time") then
                    getgenv().checkmycollect = true
                else
                    getgenv().checkmycollect = false
                end
            end)
        end
    end)
    
     -- getgenv().walkauto , getgenv().mapdefault
     local adudarkqua = {
        ["Axolotl Deep Ocean"] = Vector3.new(4250.3017578125, -12.059213638305664, 3788.037353515625),
        ["Mystic Mine"] = Vector3.new(9006.8349609375, -61.46352005004883, 2573.74951171875),
        ["Pixel Alps"] = Vector3.new(3897.318115234375, -39.473529815673828, 2440.701904296875),
    }
    
    getgenv().vitrimapgem = {
        CFrame.new(9006.8203125, -61.46352005004883, 2573.762939453125),
        CFrame.new(9064.8271484375, -61.46352005004883, 2394.87255859375),
    }
    
    function createnew(name, vector)
        local part = Instance.new("Part",game.Workspace)
        part.Name = name
        part.Position = vector
        part.Size = Vector3.new(60, 3, 65)
        part.Anchored = true
    end
    
    for i,v in pairs(adudarkqua) do
        createnew(i, v)
    end
    
    for i,v in pairs(getgenv().vitrimapgem) do
        createnew(tostring(i), v.Position)
    end
    
    getgenv().dbuoiboost = false
    function isbooster()
        local a = game
        local b = a.Workspace
        local c = a.Lighting
        local d = b.Terrain
        d.WaterWaveSize = 0
        d.WaterWaveSpeed = 0
        d.WaterReflectance = 0
        d.WaterTransparency = 0
        c.GlobalShadows = false
        c.FogEnd = 9e9
        c.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for e, f in pairs(a:GetDescendants()) do
           if f:IsA("Part") or f:IsA("Union") or f:IsA("CornerWedgePart") or f:IsA("TrussPart") then
               f.Material = "Plastic"
               f.Reflectance = 0
           elseif f:IsA("Decal") or f:IsA("Texture") then
               f.Transparency = 0
           elseif f:IsA("ParticleEmitter") or f:IsA("Trail") then
               f.Lifetime = NumberRange.new(0)
           elseif f:IsA("Explosion") then
               f.BlastPressure = 0
               f.BlastRadius = 0
           elseif f:IsA("Fire") or f:IsA("SpotLight") or f:IsA("Smoke") or f:IsA("Sparkles") then
               f.Enabled = false
           elseif f:IsA("MeshPart") then
               f.Material = "Plastic"
               f.Reflectance = 0
               f.TextureID = 10385902758728957
           end
        end
        for e, g in pairs(c:GetChildren()) do
           if
               g:IsA("BlurEffect") or g:IsA("SunRaysEffect") or g:IsA("ColorCorrectionEffect") or g:IsA("BloomEffect") or
                   g:IsA("DepthOfFieldEffect")
            then
               g.Enabled = false
           end
        end
        sethiddenproperty(game.Lighting, "Technology", "Compatibility")
    end
    
    function aasda()
        if checkgaint() == false or getgenv().mapdefault == getgenv().areafarm1 then
            if getgenv().checkmycollect then
                getgenv().mapdefault = "Axolotl Deep Ocean"
                Statusfarm.updateInfo("Collapsed, Farm Fruit")
            end
            if getgenv().mapdefault == "Lucky Block Area" then
                local v17 = v1.Directory.Areas[getgenv().mapdefault]
                if v1.WorldCmds.Get() ~= v17.world then
                    teleportto(getgenv().mapdefault)
                else
                    plr.Character.HumanoidRootPart.CFrame = vitrilucky[tostring(_G.vitribanchon)]
                end
                for i,v in pairs(autoupdate2()) do
                    Client.Network.Invoke('Join Coin', v, {i})
                    Client.Network.Fire('Farm Coin', v, i)
                end
            else
                local v17 = v1.Directory.Areas[getgenv().mapdefault]
                if v1.WorldCmds.Get() ~= v17.world then
                    getgenv().dbuoiboost = false
                else
                    if getgenv().dbuoiboost == false then
                        isbooster()
                        getgenv().dbuoiboost = true
                    end
                end
                teleportto(getgenv().mapdefault)
                Statusfarm.updateInfo("Auto Farm map: " .. getgenv().mapdefault)
                Gem.updateInfo(tostring(get("Diamonds")))
                Fruit.updateInfo(tostring(checkfruit()))
                for i,v in pairs(autoupdate2()) do
                    Client.Network.Invoke('Join Coin', v, {i})
                    Client.Network.Fire('Farm Coin', v, i)
                end
            end
        end
    end
    
    local itemboost = {
        "Triple Coins",
        "Triple Damage",
        "Super Lucky",
        "Ultra Lucky"
    }
    
    function getboost()
        local v48 = v1.Save.Get();
        for i,v in pairs(v48.BoostsInventory) do
            if tonumber(v) ~= 0 then
                Client.Network.Fire("Activate Boost",i)
            end
        end
    end
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    -- (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(9021.90234375, -13.249011993408203, 2506.343994140625)).Magnitude
    -- function autowalk()
    --     if getgenv().autowalkne == true then
    --         humanoid:MoveTo(adudarkqua[getgenv().mapdefault])
    --     end
    -- end
    
    radius = 80
    speed = 20
    angle = 0
    
    spawn(function()
        while true do wait()
            local a,b = pcall(function()
                if getgenv().autowalkne == true then
                    controls:Enable() 
                    if game:GetService("Workspace").__MAP.Areas:FindFirstChild("Mystic Mine") then
                        for i,v in pairs(game:GetService("Workspace").__MAP.Areas:FindFirstChild("Mystic Mine"):GetChildren()) do
                            if v.Name == "Meshes/All_assets_Runic.001" then
                                v:Destroy()
                            end
                        end
                    end
                    local v17 = v1.Directory.Areas[getgenv().mapdefault]
                    if v1.WorldCmds.Get() == v17.world then
                        done = false
                        local player = game.Players.LocalPlayer
                        local center = adudarkqua[getgenv().mapdefault]
                        angle = angle + speed
                        if angle >= 360 then
                            angle = angle - 360
                        end
                        local radians = math.rad(angle)
                        local x = center.X + radius * math.cos(radians)
                        local z = center.Z + radius * math.sin(radians)
                        local mag = (player.Character.HumanoidRootPart.Position - Vector3.new(x, center.Y, z)).Magnitude
                        local magngohem = (Vector3.new(x, center.Y, z) - ngohem[getgenv().mapdefault]).Magnitude
                        if angle ~= 20 then
                            if mag >= 40 then
                                print("AAAAA")
                                teleportto(getgenv().mapdefault)
                            end
                        else
                            if magngohem <= 40 and checkgaint() ~= false then
                                print("Giantsss")
                                player.Character.Humanoid.MoveToFinished:Connect(
                                    function()
                                        done = true
                                    end
                                )
                                repeat wait()
                                    player.Character.Humanoid:MoveTo(checkgaint()[2])
                                until done == true or getgenv().autowalkne == false or checkgaint() == false
                            end
                            if mag >= 150 then
                                print("AAAAAZ")
                                teleportto(getgenv().mapdefault)
                            end
                        end
                        player.Character.Humanoid:MoveTo(Vector3.new(x, center.Y, z))
                        player.Character.Humanoid.MoveToFinished:Connect(
                            function()
                                done = true
                            end
                        )
                        repeat wait()
                            player.Character.Humanoid:MoveTo(Vector3.new(x, center.Y, z))
                        until done == true or getgenv().autowalkne == false
                        wait(0.1)
                    else
                        teleportto(getgenv().mapdefault)
                        wait(10)
                    end
                else
                    radius = 80
                    speed = 20
                    angle = 0
                end
            end)
        end
    end)
    
    spawn(function()
        while true do wait(1)
            local a,b = pcall(getboost)
        end
    end)
    
    spawn(function()
        while true do wait(1)
            if getgenv().autowalkne then
                pcall(function()
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
                    wait(4)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
                end)
            end
        end
    end)
    
    spawn(function()
        while true do wait(getgenv().tgianne)
            if not getgenv().startdc and not getgenv().collectdc and getgenv().sendgemnek == false and not getgenv().autocometnek then
                local a,b = pcall(aasda)
                print(a,b)
            end
        end
    end)
    
    spawn(function()
        while true do wait()
            if getgenv().resetfruit30min then
                if getgenv().startresetfruit == false then
                    local tickna = tick()
                    repeat wait(1)
                        Error2.updateInfo("Wait Farm reset fruit: " .. tostring(math.floor(tick() - tickna)) .. " s / " .. tostring(60 * 60) .. "s")
                    until tick() - tickna >= 60 * 60
                    getgenv().startresetfruit = true
                end
            end
        end
    end)
    
    function checkfruit()
        soluong = 0
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.Boosts:GetChildren()) do
            if v.Name == "Orange" or v.Name == "Apple" then
                local zad = string.gsub(v.TimeLeft.Text , "x" ,"")
                soluong = soluong + tonumber(zad)
            end
        end
        return soluong
    end
    
    getgenv().farmmerne = false
    getgenv().checkedfruit = false
    -- getgenv().Sv
    spawn(function()
        while true do wait()
            pcall(function()
                if getgenv().checkmycollect == false then
                    if getgenv().startresetfruit == true then
                        getgenv().mapdefault = getgenv().areafarm1
                        local tickne = tick()
                        repeat wait(1)
                            Error2.updateInfo("Farm reset fruit: " .. tostring(math.floor(tick() - tickne)) .. "s / 60s")
                        until tick() - tickne > 60
                        getgenv().startresetfruit = false
                    else
                        if getgenv().farmabcxyz == "double" then
                            if getgenv().methodchange == "So Luong Fruit" then
                                if getgenv().checkmycollect == false then
                                    if getgenv().methodfarmfruit == "1" then
                                        if checkfruit() < getgenv().timemap1 then
                                            getgenv().mapdefault = getgenv().areafarm1
                                            getgenv().checkedfruit = false
                                        end
                                        if checkfruit() > getgenv().timemap1 and getgenv().checkedfruit ~= false then
                                            getgenv().mapdefault = getgenv().areafarm2
                                        end
                                        if checkfruit() >= getgenv().timemap2 then
                                            getgenv().mapdefault = getgenv().areafarm2
                                            getgenv().checkedfruit = true
                                        end
                                    else
                                        -- pet cac
                                        if checkfruit() < getgenv().timemap1 then
                                            Error.updateInfo("Farm fruit")
                                            getgenv().mapdefault = getgenv().areafarm1
                                            getgenv().Sv.fruitstatus = true
                                            savesetting()
                                        end
                                        if (checkfruit() >= getgenv().timemap2) or getgenv().Sv.fruitstatus == false then
                                            Error.updateInfo("Farm gem")
                                            getgenv().mapdefault = getgenv().areafarm2
                                            getgenv().Sv.fruitstatus = false
                                            savesetting()
                                        end
                                    end
                                else
                                    getgenv().mapdefault = getgenv().areafarm1
                                end
                                -- if checkfruit() >= getgenv().timemap2 then
                                --     if checkhavechest() == false then
                                --         getgenv().farmmerne = true
                                --         getgenv().mapdefault = getgenv().areafarm2
                                --         getgenv().checkedfruit = true
                                --     else
                                --         getgenv().mapdefault = "Mystic Mine"
                                --         getgenv().checkedfruit = true
                                --     end
                                -- end
                                -- if checkfruit() < getgenv().timemap1 or getgenv().checkedfruit == true then
                                --     if getgenv().farmmerne == true then
                                --         if checkfruit() <= getgenv().timemap1 then
                                --             getgenv().mapdefault = getgenv().areafarm1
                                --             getgenv().farmmerne = false
                                --             getgenv().checkedfruit = false
                                --         end
                                --     end
                                --     if getgenv().farmmerne == false then
                                --         getgenv().mapdefault = getgenv().areafarm1
                                --     end
                                -- end
                            else
                                local map1 = tick()
                                repeat wait()
                                    getgenv().mapdefault = getgenv().areafarm1
                                until tick() - map1 >= getgenv().timemap1 * 60
                                local map2 = tick()
                                repeat wait()
                                    getgenv().mapdefault = getgenv().areafarm2
                                until tick() - map2 >= getgenv().timemap2 * 60
                            end
                        else
                            getgenv().mapdefault = getgenv().areafarm1
                        end
                    end
                else
                    getgenv().mapdefault = "Axolotl Deep Ocean"
                end
            end)
        end
    end)
    
    local Orbs = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Orbs)
    local Lootbags = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Lootbags)
    function lootbag(v1)
        Lootbags.Collect(v1)
    end
    function lootorb(v1)
        Orbs.Collect(v1)
    end
    if getgenv().methodhutgem == "Old" then
        workspace.__THINGS.Orbs.ChildAdded:Connect(function(v)
            pcall(lootorb(v))
        end)
        workspace.__THINGS.Lootbags.ChildAdded:Connect(function(v)
            pcall(lootbag(v))
        end)
    else
        spawn(function()
            pcall(function()
                while true do wait(.2)
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
                            v.CanCollide = false
                            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                        end
                    end)
                end
            end)
        end)
        
        spawn(function()
            pcall(function()
                while true do wait(.2)
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetChildren()) do
                            v.CanCollide = false
                            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                        end
                    end)
                end
            end)
        end)
    end
    
    function GetEquippedPets()
        return Client.PetCmds.GetEquipped() 
    end
    
    function ahih1i(num)
        if num == 0 then
            return
        end
        local v48 = v1.Save.Get()
        local petmain = {}
        local petblacklist = {}
        getgenv().resultpet = {}
        for i,v in pairs(GetEquippedPets()) do
            table.insert(petblacklist, v.uid)
        end
        for i,v in pairs(v48.Pets) do 
            if tablefind(petblacklist , v48.Pets[i]["uid"]) == false then
                local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                if checkne.rarity ~= "Event" and checkne.rarity ~= "Exclusive" and (v48.Pets[i].l == nil or v48.Pets[i].l == false) then
                    table.insert(petmain, {tonumber(v48.Pets[i]["s"]), v48.Pets[i]["uid"]})
                end
            end
        end
    
        numreal = num
    
        for i =1 , numreal do 
            local index = 0
            local maxmath = -math.huge
            for j = 1 , #petmain do
                if maxmath < petmain[j][1] then
                    maxmath = petmain[j][1]
                    jack5triu = petmain[j][2]
                    index = j
                end
            end
            table.insert(getgenv().resultpet , jack5triu)
            table.remove(petmain , index)
        end
        return getgenv().resultpet
    end
    
    function candaycarene()
        local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
        local v65 = v1.Save.Get()
        if v1.Shared.IsHardcore then
            v67 = v65.DaycareHardcoreQueue
        else
            v67 = v65.DaycareQueue
        end
        return #v67
    end
    
    function isuidc()
        return game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Enabled 
    end
    
    function petandlot()
        return game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Visible
    end
    
    function after1pet()
        return game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Holder2Stage2.Visible
    end
    
    local enroll1 = game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.Categories.EnrollPets.Frame.OpenEnrollMenu
    local enrollne = game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Side.EnrollStage12
    
    function getfirstclick(tablene)
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.HolderStage1:GetChildren()) do
            if v:IsA("TextButton") and tablefind(tablene, v.Name) then
                return v
            end
        end
    end
    
    function dccheck()
        if game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled then
            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Put these pets in daycare? They cannot be taken out early!" then
                return true
            end
        end
        return false
    end
    
    function autodaycare()
        if candaycarene() == 0 then
            getgenv().startdc = true
            if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                teleportto("Spawn")
            end
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(35,100,40)
            controls:Disable()
            if isuidc() then
                if petandlot() then
                    if after1pet() == false then
                        clickman(getfirstclick(ahih1i(10)))
                    else
                        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Holder1Stage2:GetChildren()) do
                            if v:IsA("TextButton") and tablefind(ahih1i(10), v.Name) then
                                if v.Equipped.Visible ~= true then
                                    clickman(v)
                                    wait(1)
                                end
                            end
                        end
                        wait(2)
                        clickman(enrollne)
                        wait(2)
                        if dccheck() then
                            clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                        end
                    end
                else
                    clickman(enroll1)
                end
            end
        else
            getgenv().startdc = false
        end
    end
    
    function candaycare()
        local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
        local v65 = v1.Save.Get()
        if v1.Shared.IsHardcore then
            v67 = v65.DaycareHardcoreQueue
        else
            v67 = v65.DaycareQueue
        end
        for i,v in pairs(v67) do
            return true
        end
        return false
    end
    
    function gettime()
        access = false
        local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
        local v65 = v1.Save.Get()
        if v1.Shared.IsHardcore then
            v67 = v65.DaycareHardcoreQueue
        else
            v67 = v65.DaycareQueue
        end
        for i,v in pairs(v67) do
            local u13 = v1.Shared.DaycareComputeRemainingTime(v65, v67[i])
            access = true
            if u13 > 4 then
                return false
            end
        end
        if access == false then
            return false
        end
    end
    
    
    getgenv().collectdc = false
    getgenv().startdc = false
    getgenv().hascollectdaycare = false
    
    function collectdaycare()
        if getgenv().hascollectdaycare == false then
            local timecl = tick()
            repeat wait()
            until tick() - timecl >= 20 * 60
            getgenv().hascollectdaycare = true
        end
        if gettime() ~= false and candaycare() then
            getgenv().collectdc = true
            teleportto("Spawn")
            if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                teleportto("Spawn")
            end
            plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
            Client.Network.Invoke("Daycare: Claim", nil)
        else
            getgenv().collectdc = false
        end
    end
    
    spawn(function()
        while true do wait(3)
            if candaycarene() == 0 and getgenv().autodaycare and not getgenv().autocometnek then
                print("A")
                getgenv().autowalkne = false
                local a,b = pcall(autodaycare)
                print(a,b)
            else
                getgenv().startdc = false
            end
        end
    end)
    
    spawn(function()
        while true do wait(5)
            if candaycare() and gettime() ~= false and getgenv().sendgemnek == false and not getgenv().autocometnek then
                print("B")
                getgenv().autowalkne = false
                pcall(collectdaycare)
            else
                getgenv().collectdc = false
            end
        end
    end)
    
    local Save = v1.Save.Get
    local Commas = v1.Functions.Commas
    
    function get(thistype)
        if game.PlaceId == 10321372166 and string.find(string.lower(thistype), "coins") then
            return Save().HardcoreCurrency[thistype]
        else
            return Save()[thistype]
        end
    end
    
    function ComposeMail(name,Diamond,pets)    
        return {
            Recipient = tostring(name), 
            Message = "Quanh Dz",
            Pets = {pets}, 
            Diamonds = tonumber(Diamond),
        };
    end;
    
    -------- website
    function status()
        local res = request({
            Url = (host .. "/user/get/%d"):format(game.Players.LocalPlayer.UserId),
            Method = "GET"
        })
        return res
    end
    
    function iduser()
        return game.Players.LocalPlayer.UserId
    end
    function nameuser()
        return game.Players.LocalPlayer.Name
    end
    
    function namegame()
        return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    end
    
    function jobid()
        return game.JobId
    end
    
    function getstatus(aa)
        if getgenv().setmain == true then
            return "MainAccount|" .. aa
        else
            return aa
        end
    end
    
    function connect(a,b,c,d,f,g)
        ws:Send(game:GetService("HttpService"):JSONEncode({
            Mode = "Connect",
            Id = a,
            Name = b,
            Game = c,
            JobId = d,
            Cooldown = f,
            Info = g
        }))
    end
    
    function edit(a,b,c,d,f,g)
        ws:Send(game:GetService("HttpService"):JSONEncode({
            Mode = "Edit",
            Id = a,
            Name = b,
            Game = c,
            JobId = d,
            Cooldown = f,
            Info = g
        }))
    end
    function connecta()
        if status().StatusCode == 404 then
            connect(iduser(), nameuser(), namegame(), jobid(), 0,0,getstatus("NewServer"))
        end
    end
    
    -- local ticknek = tick()
    
    -- repeat wait(3)
    --     connecta()
    -- until status().StatusCode == 200 or tick() - ticknek >= 10
    
    -- if status().StatusCode ~= 200 then
    --     plr:Kick("Cannot Connect To Server!")
    -- end
    
    function getinfonek()
        local res = request({
            Url = host.."/user/get",
            Method = "GET"
        })
        local data = game:GetService("HttpService"):JSONDecode(res.Body)
        return data
    end
    
    function getinfouser(abcne)
        local res = request({
            Url = (host.."/user/get/%d"):format(abcne),
            Method = "GET"
        })
        local data = game:GetService("HttpService"):JSONDecode(res.Body)
        return data
    end
    
    function getdata2()
        for i,v in pairs(getinfonek()) do
            local a = string.split(v.Info, "|")
            if a[1] == "MainAccount" and v.Status == true then
                return {a[2], v.JobId, v.Id}
            end
        end
        return false
    end
    
    function getlocationbuy(adudark)
        for i,v in pairs(game:GetService("Workspace").__MAP.Interactive.Booths:GetDescendants()) do
            if v:IsA("Frame") then
                if v.Name == adudark then
                    return v.Parent.Parent.Parent.CFrame
                end
            end
        end
    end
    
    function ahihidongok()
        for i,v in pairs(Client.Network.Invoke("Get All Booths")) do
            if v.Owner == getdata2()[3] then
                for i1,v1 in pairs(v["Listings"]) do
                    return {tonumber(i), i1, v1["Price"]}
                end
            end
        end
        return false
    end
    
    ------
    
    function sendneknek(a,b)
        print("adubuqua")
        print(Client.Network.Invoke("Send Mail",ComposeMail(a,b)))
    end
    
    local vitricuabank = Vector3.new(231.22198486328125, 98.11483001708984, 358.1041259765625)
    local v48 = v1.Save.Get()
    function havenearbank()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name ~= plr.Name then
                if (v.Character.HumanoidRootPart.Position - vitricuabank).Magnitude < 50 then
                    return true
                end
            end
        end
        return false
    end
    function checkisbank()
        return game:GetService("Players").LocalPlayer.PlayerGui.Bank.Enabled
    end
    function tweenfarasm(targetPos, targetCFrame)
        local gay = (targetPos-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        local Tween = game:GetService('TweenService'):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(
                gay / 50, 
                Enum.EasingStyle.Linear
            ),
            {CFrame = targetCFrame * CFrame.new(0,0,0)}
        )
        Tween:Play()
        Tween.Completed:Wait()
    end 
    function getmybank()
        if getgenv().doneleave ~= true then
            for i,v in pairs(Client.Network.Invoke("Get My Banks")) do
                return v.BUID
            end
        end
        return false
    end
    local vitrirs = Vector3.new(232.1697235107422, 98.11483001708984, 312.91363525390625)
    local vitribank = Vector3.new(229.9514923095703, 98.11483001708984, 360.9400329589844)
    function checknearbank()
        if (plr.Character.HumanoidRootPart.Position - vitribank).Magnitude < 10 then
            return true
        end
        return false
    end
    
    local v17 = v1.Directory.Areas["Shop"]
    function autofixUI()
        if checknearbank() and checkisbank() == false then
            tweenfarasm(vitrirs,CFrame.new(vitrirs))
            tweenfarasm(vitribank,CFrame.new(vitribank))
        end
    end
    function teleportto(texta)
        print(hihi.Teleport(texta,true))
    end
    function fireButton1(button)
        for i,signal in next, getconnections(button.Activated) do 
            signal:Function()
        end
    end
    function clickman(a)
        spawn(function()
            fireButton1(a)
        end)
    end
    function getinvite()
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
            if string.find(v.Name, "INVITE") then
                local a = string.gsub(v.Player.Text, "@", "")
                if a == getgenv().Nameaccmain then
                    return v
                end
            end
        end
        return false
    end
    function stringfind(a,b)
        if string.find(a,b) then
            return true
        end
        return false
    end
    function getinvite2()
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
            if not stringfind(v.Name, "INVITE") then
                if string.len(v.Name) > 30 then
                    if v.Owner.Text == tostring("@" .. getgenv().Nameaccmain) then
                        return v
                    end
                end
            end
        end
        return false
    end
    function ismes()
        return game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled
    end
    local v17 = v1.Directory.Areas["Shop"]
        function sendgem11()
            if get("Diamonds") >= getgenv().soluonggem + 100000 then
                Client.Network.Invoke("Buy Trading Plaza")
                getgenv().sendgemnek = true
                teleportto("Shop")
                wait(5)
                plr.Character.HumanoidRootPart.CFrame = CFrame.new(257.4012756347656, 97.88801574707031, 351.0747985839844)
                controls:Disable()
                wait(1)
                sendneknek(getgenv().Nameaccmain,get("Diamonds") - 100000)
            else
                getgenv().sendgemnek = false
            end
        end
    
    -- function sendgem11()
    --     if get("Diamonds") >= getgenv().soluonggem then
    --         if game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled == true then
    --             clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
    --         end
    --         if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
    --             clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
    --         end
    --         getgenv().sendgemnek = true
    --         if v1.WorldCmds.Get() == v17.world then
    --             if getmybank() == false then
    --                 if checkisbank() == false then
    --                     if v1.WorldCmds.Get() == v17.world then
    --                         autofixUI()
    --                         if not checknearbank() then
    --                             tweenfarasm(vitribank,CFrame.new(vitribank))
    --                         end
    --                     else
    --                         teleportto("Shop")
    --                     end
    --                 else
    --                     if not checknearbank() then
    --                         tweenfarasm(vitribank,CFrame.new(vitribank))
    --                     else
    --                         if getinvite() ~= false then
    --                             clickman(getinvite())
    --                         end
    --                         wait(5)
    --                         if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Do you want to accept this invite?" then
    --                             clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
    --                         else
    --                             clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
    --                         end
    --                         wait(2)
    --                         if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
    --                             clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
    --                         end
    --                         wait(10)
    --                         Client.Network.Invoke("Bank Deposit",getmybank(),{} ,get("Diamonds"))
    --                     end
    --                 end
    --             end
    --         else
    --             teleportto("Shop")
    --         end
    --     else
    --         if getmybank() then
    --             getgenv().sendgemnek = true
    --             if v1.WorldCmds.Get() == v17.world then
    --                 if checkisbank() == false then
    --                     if v1.WorldCmds.Get() == v17.world then
    --                         autofixUI()
    --                         if not checknearbank() then
    --                             tweenfarasm(vitribank,CFrame.new(vitribank))
    --                         end
    --                     else
    --                         teleportto("Shop")
    --                     end
    --                 else
    --                     if not checknearbank() then
    --                         tweenfarasm(vitribank,CFrame.new(vitribank))
    --                     else
    --                         if getinvite2() ~= false then
    --                             clickman(getinvite2()) 
    --                             wait(3)
    --                             clickman(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Container.Bank.Bottom.Leave)
    --                             wait(3)
    --                             if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Are you sure you want to leave this bank?" then
    --                                 clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
    --                                 wait(2)
    --                                 getgenv().doneleave = true
    --                             else
    --                                 clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
    --                             end
    --                             wait(2)
    --                             if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
    --                                 clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
    --                             end
    --                             wait(10)
    --                         end
    --                     end
    --                 end
    --             else
    --                 if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
    --                     clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
    --                 end
    --                 teleportto("Shop")
    --             end
    --         else
    --             if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
    --                 clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
    --             end
    --             getgenv().sendgemnek = false
    --         end
    --     end
    --     -- if getgenv().methodsendgem == "New" then
    --     --     if get("Diamonds") >= getgenv().soluonggem + 100000 then
    --     --         getgenv().sendgemnek = true
    --     --         if getdata2()[1] == "StartForBuy" then
    --     --             if v1.Shared.IsTradingPlaza then
    --     --                 print(getdata2()[2], game.JobId)
    --     --                 if getdata2()[2] ~= game.JobId then
    --     --                     print("cac")
    --     --                     edit(iduser(), nameuser(), namegame(), jobid(),0,getstatus("Joining Main Account"))
    --     --                     game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,getdata2()[2], game.Players.LocalPlayer)
    --     --                 else
    --     --                     if (plr.Character.HumanoidRootPart.Position - getlocationbuy(ahihidongok()[2]).Position).Magnitude > 5 then
    --     --                         plr.Character.HumanoidRootPart.CFrame = getlocationbuy(ahihidongok()[2])
    --     --                     end
    --     --                     wait(2)
    --     --                     print(Client.Network.Invoke("Purchase Trading Booth Pet", ahihidongok()[1], ahihidongok()[2], ahihidongok()[3]))
    --     --                 end
    --     --             else
    --     --                 edit(iduser(), nameuser(), namegame(), jobid(),0,getstatus("Joining Traing Server"))
    --     --                 Client.Network.Invoke("Travel to Trading Plaza", "DEFAULT")
    --     --             end
    --     --         end
    --     --     else
    --     --         if v1.Shared.IsTradingPlaza then
    --     --             local ts = game:GetService("TeleportService")
    --     --             local p = game:GetService("Players").LocalPlayer
    --     --             ts:Teleport(6284583030, p)
    --     --         end
    --     --         getgenv().sendgemnek = false
    --     --     end
    --     -- else
    --     --     if get("Diamonds") >= getgenv().soluonggem + 100000 then
    --     --         getgenv().sendgemnek = true
    --     --         teleportto("Shop")
    --     --         wait(5)
    --     --         plr.Character.HumanoidRootPart.CFrame = CFrame.new(257.4012756347656, 97.88801574707031, 351.0747985839844)
    --     --         wait(1)
    --     --         sendneknek(getgenv().Nameaccmain,getgenv().soluonggem)
    --     --     else
    --     --         getgenv().sendgemnek = false
    --     --     end
    --     -- end
    -- end
    
    function getcommet()
        if getgenv().autocomet then
            local getcomets = Client.Network.Invoke("Comets: Get Data")
            for i,v in pairs(getcomets) do
                if getcomets[i].AreaId ~= "Town" and v1.WorldCmds.HasArea(getcomets[i].AreaId) then
                    return {getcomets[i].CoinId , getcomets[i].AreaId, getcomets[i].EndPosition}
                end
            end
        end
        return false
    end
    
    function farmcometnez()
        if getgenv().autocometnek then
            getgenv().autowalkne = false
            if not game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(getcommet()[1]) then
                teleportto(getcommet()[2])
            else
                for i1,v1 in pairs(Client.PetCmds.GetEquipped()) do
                    if getcommet() ~= false then
                        Client.Network.Invoke('Join Coin', getcommet()[1], {v1.uid})
                        Client.Network.Fire('Farm Coin', getcommet()[1], v1.uid)
                    end
                end
            end 
        end
    end
    
    spawn(function()
        while true do wait(1)
            if getcommet() ~= false and getgenv().autocomet then
                getgenv().autocometnek = true
                pcall(farmcometnez)
            else
                getgenv().autocometnek = false
            end
        end
    end)
    
    spawn(function()
        while true do wait(5)
            if getgenv().autosendgem and not getgenv().autocometnek then
                local a,b = pcall(sendgem11)
                print(a,b)
            else
                getgenv().sendgemnek = false
            end
        end
    end)
    
    function toiuu()
        if getgenv().boostnow then
            for i,v in next, workspace:GetDescendants() do
                pcall(function()
                    v.Transparency = 1
                end)
            end
            for i,v in next, getnilinstances() do
                pcall(function()
                    v.Transparency = 1
                    for i1,v1 in next, v:GetDescendants() do
                        v1.Transparency = 1
                    end
                end)
            end
            local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
            local g = game
            local w = g.Workspace
            local l = g.Lighting
            local t = w.Terrain
            pcall(function()
                sethiddenproperty(l,"Technology",2)
                sethiddenproperty(t,"Decoration",false)
            end)
            t.WaterWaveSize = 0
            t.WaterWaveSpeed = 0
            t.WaterReflectance = 0
            t.WaterTransparency = 0
            l.GlobalShadows = 0
            l.FogEnd = 9e9
            l.Brightness = 0
            settings().Rendering.QualityLevel = "Level01"
            for i, v in pairs(w:GetDescendants()) do
                if v:IsA("BasePart") and not v:IsA("MeshPart") then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
                    v.Transparency = 1
                elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                    v.Lifetime = NumberRange.new(0)
                elseif v:IsA("Explosion") then
                    v.BlastPressure = 1
                    v.BlastRadius = 1
                elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                    v.Enabled = false
                elseif v:IsA("MeshPart") and decalsyeeted then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                    v.TextureID = 10385902758728957
                elseif v:IsA("SpecialMesh") and decalsyeeted  then
                    v.TextureId=0
                elseif v:IsA("ShirtGraphic") and decalsyeeted then
                    v.Graphic=0
                elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
                    v[v.ClassName.."Template"]=0
                end
            end
            for i = 1,#l:GetChildren() do
                e=l:GetChildren()[i]
                if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                    e.Enabled = false
                end
            end
        end
    end
    
    toiuu()
    
    if getgenv().whitescreen then
        local RunService = game:GetService("RunService")
        RunService:Set3dRenderingEnabled(false)
    else
        local RunService = game:GetService("RunService")
        RunService:Set3dRenderingEnabled(true)
    end
    
    game.NetworkClient.ChildRemoved:Connect(function()
        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
    end)
    
    game.Players.PlayerRemoving:connect(function(plr)
        if plr == game.Players.LocalPlayer then
            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
        end
    end)
    
    spawn(function()
        while true do wait(60)
            if getgenv().autodaily then
                for i = 1 , 12 do
                    Client.Network.Invoke("Redeem Free Gift", i)
                    wait(2)
                end
            end
        end
    end)
    end
    spawn(function()
        while true do wait(5 * 60)
            pcall(function()
                local humanoid = game.Players.LocalPlayer.Character.Humanoid
                local character = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                humanoid:MoveTo(Vector3.new(character.X, character.Y,character.Z + 30))
            end)
        end
    end)
    getgenv().checkedload = 0
    spawn(function()
        while true do wait(1)
            if game:GetService("Players").LocalPlayer.PlayerGui.Loading.Enabled == true then
                getgenv().checkedload = getgenv().checkedload + 1
            else
                getgenv().checkedload = getgenv().checkedload - 1
            end
            if getgenv().checkedload >= 100 then
                game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
            end
        end
    end)
    
    spawn(function()
        repeat wait() until game.CoreGui:FindFirstChild('RobloxPromptGui')
        local lp,po,ts = game:GetService('Players').LocalPlayer,game.CoreGui.RobloxPromptGui.promptOverlay,game:GetService('TeleportService')
        po.ChildAdded:connect(function(a)
            if a.Name == 'ErrorPrompt' then
                repeat
                    ts:Teleport(game.PlaceId)
                    wait(2)
                until false
            end
        end)
    end)
    return lib
else
    if not game:IsLoaded() then game.Loaded:Wait() end
    local plr = game.Players.LocalPlayer
    getgenv().Save = {
        ["Mine Collapse"] = 0,
    }
    
    if not isfile(plr.Name..".datas") then
        writefile(plr.Name..".datas", game:GetService("HttpService"):JSONEncode(getgenv().Save))
    end
    wait(1)
    if isfile(plr.Name..".datas") then
        writefile(plr.Name..".datas", game:GetService("HttpService"):JSONEncode(getgenv().Save))
    end
    function saveconfig()
        if isfile(plr.Name..".datas") then
            writefile(plr.Name..".datas", game:GetService("HttpService"):JSONEncode(getgenv().Save))
        else
            if not isfile(plr.Name..".datas") then
                writefile(plr.Name..".datas", game:GetService("HttpService"):JSONEncode(getgenv().Save))
            end
        end
    end
    saveconfig()
    repeat wait() until getgenv().sendmail ~= true and getgenv().sendbank ~= true 
    getgenv().checked = 0
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game.Players
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game.Players.LocalPlayer
    repeat wait(1) 
    
    until game.ReplicatedStorage
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Players").LocalPlayer.PlayerGui.Main.Right
    repeat wait(1) 
        getgenv().checked = getgenv().checked + 1 
        if getgenv().checked > 100 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
            wait(10)
        end
    until game:GetService("Workspace"):FindFirstChild("__MAP")
    local services = setmetatable({}, {
        __index = function(_, service)
            return game:GetService(service)
        end,
    })
    
    local lib = {}
    local utils = {}
    
    utils.random = function(_length)
        local characters = "abcdefghijklmnopqrstuvwxyz1234567890"
        characters = string.split(characters, "")
                
        local randomString = ""
                
        for i = 1, _length do
            local i = math.random(1, #characters)
                    
            if (not tonumber(characters[i])) then
                local uppercase = math.random(1, 2) == 2 and true or false
                randomString = randomString .. (uppercase and characters[i]:upper() or characters[i])
            else
                randomString = randomString .. characters[i]
            end
        end
                
        return randomString
    end
    
    utils.create = function(class, prop)
        local obj = Instance.new(class)
            
        for prop, v in next, prop do
                    obj[prop] = v
        end
            
        pcall(function()
            obj.AutoButtonColor = false
        end)
        
        obj.Name = utils.random(16)
            
        return obj
    end
    
    utils.tween = function(obj, info, properties, callback)
        local anim = services.TweenService:Create(obj, TweenInfo.new(unpack(info)), properties)
        anim:Play()
    
        if callback then
            anim.Completed:Connect(callback)
        end
    
        return anim
    end
    
    utils.dragify = function(object, hoverobj, speed, additionalObject)
        local start, objectPosition, dragging
    
        speed = speed or 0
    
        hoverobj.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                start = input.Position
                objectPosition = object.Position
            end
        end)
    
        hoverobj.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
    
        services.UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
                utils.tween(object, { speed }, {
                    Position = UDim2.new(
                        objectPosition.X.Scale,
                        objectPosition.X.Offset + (input.Position - start).X,
                        objectPosition.Y.Scale,
                        objectPosition.Y.Offset + (input.Position - start).Y
                    ),
                })
                utils.tween(additionalObject, { speed + 0.0000001 }, {
                    Position = UDim2.new(
                        objectPosition.X.Scale,
                        objectPosition.X.Offset + (input.Position - start).X,
                        objectPosition.Y.Scale,
                        objectPosition.Y.Offset + (input.Position - start).Y
                    ),
                })
            end
        end)
    end
    
    utils.updatesize = function(uil, obj)
        local Property = "CanvasSize"
    
        if not obj:IsA("ScrollingFrame") then
            Property = "Size"
        end
    
        local cS = uil.AbsoluteContentSize
    
        game.TweenService
            :Create(obj, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                [Property] = UDim2.new(
                    Property == "Size" and obj.Size.X.Scale or 0,
                    cS.X,
                    Property == "Size" and obj.Size.Y.Scale or 0,
                    cS.Y + 50
                ),
            })
            :Play()
    end
    
    -- // Main Functions
    
    lib.createWindow = function()
        local ScreenGui = utils.create('ScreenGui', {
            Parent = game:GetService('CoreGui'),
            ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
            ResetOnSpawn = false,
            DisplayOrder = 9
        })
    
        local BackgroundFrame = utils.create('Frame', {
            Parent = ScreenGui,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(27, 27, 25),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(0, 400, 0, 270),
        })
    
        utils.create('UICorner', {
            CornerRadius = UDim.new(0, 12),
            Parent = BackgroundFrame,
        })
    
        local BackgroundShadow = utils.create('ImageLabel', {
            Parent = BackgroundFrame,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.499853075, 0, 0.496137619, 0),
            Size = UDim2.new(1, 0, 1, 0),
            ZIndex = 0,
            Image = "rbxassetid://8992584561",
            ImageColor3 = Color3.fromRGB(33, 32, 46),
            ImageTransparency = 0.100,
            ScaleType = Enum.ScaleType.Slice,
            SliceCenter = Rect.new(73, 73, 73, 73),
            SliceScale = 0.980,
        })
    
        local BackgroundPlasma = utils.create('ImageLabel', {
            Name = "BackgroundPlasma",
            Parent = BackgroundFrame,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.482142866, 10, 0.477272719, 20),
            Size = UDim2.new(1, 0, 1, 0),
            Image = "rbxassetid://8992584561",
            ImageColor3 = Color3.fromRGB(196, 167, 231),
            SliceCenter = Rect.new(73, 73, 73, 73),
            SliceScale = 0.980,
        })
    
        local BackgroundPlasma_2 = utils.create('ImageLabel', {
                Name = "BackgroundPlasma",
                Parent = BackgroundFrame,
                AnchorPoint = Vector2.new(0.5, 0.5),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Position = UDim2.new(0.482142866, 10, 0.477272719, 20),
                Size = UDim2.new(1, 0, 1, 0),
                Image = "rbxassetid://8992584561",
                ImageColor3 = Color3.fromRGB(196, 167, 231),
                SliceCenter = Rect.new(73, 73, 73, 73),
                SliceScale = 0.980,
        })
    
        local CanvasGroup = utils.create('CanvasGroup', {
            Parent = ScreenGui,
            AnchorPoint = Vector2.new(0.5, 0.5),
            BackgroundColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundTransparency = 1.000,
            Position = UDim2.new(0.5, 0, 0.5, 0),
            Size = UDim2.new(0, 400, 0, 270),
            ZIndex = 2,
        })
    
        local UIStroke = utils.create('UIStroke', {
            Color = Color3.fromRGB(86, 82, 110),
            Thickness = 2.000,
            Parent = CanvasGroup,
        })
    
        local MainFrame = utils.create('Frame', {
            Name = "MainFrame",
            Parent = CanvasGroup,
            BackgroundColor3 = Color3.fromRGB(25, 23, 28),
            BackgroundTransparency = 0.200,
            Size = UDim2.new(1, 0, 1, 0)
        })
        local UICorner = utils.create('UICorner', {
                CornerRadius = UDim.new(0, 12),
                Parent = MainFrame,
        })
        local Content = utils.create('Frame', {
                Name = "Content",
                Parent = MainFrame,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                BorderColor3 = Color3.fromRGB(0, 0, 0),
                BorderSizePixel = 0,
                Size = UDim2.new(1, 0, 1, 0),
        })
        local TopBar = utils.create('Frame', {
                Name = "TopBar",
                Parent = Content,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Size = UDim2.new(1, 0, 0, 36),
        })
        local xSeperator = utils.create('Frame', {
                Name = "xSeperator",
                Parent = TopBar,
                BackgroundColor3 = Color3.fromRGB(196, 167, 231),
                BackgroundTransparency = 0.800,
                BorderSizePixel = 0,
                Position = UDim2.new(0, 0, 1, 0),
                Size = UDim2.new(1, 0, 0, 1),
        })
        local Buttons = utils.create('Frame', {
                Name = "Buttons",
                Parent = TopBar,
                AnchorPoint = Vector2.new(0, 0.5),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Position = UDim2.new(0, 10, 0.5, 0),
                Size = UDim2.new(0, 100, 0, 10),
        })
        local UIListLayout = utils.create('UIListLayout', {
                Parent = Buttons,
                FillDirection = Enum.FillDirection.Horizontal,
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 5),
        })
        local Close = utils.create('Frame', {
                Name = "Close",
                Parent = Buttons,
                BackgroundColor3 = Color3.fromRGB(235, 111, 146),
                BackgroundTransparency = 0.300,
                Size = UDim2.new(0, 10, 0, 10),
        })
        local UICorner_2 = utils.create('UICorner', {
                CornerRadius = UDim.new(0, 3192),
                Parent = Close,
        })
        local Minimize = utils.create('Frame', {
                Name = "Minimize",
                Parent = Buttons,
                BackgroundColor3 = Color3.fromRGB(246, 193, 119),
                BackgroundTransparency = 0.300,
                Size = UDim2.new(0, 10, 0, 10),
        })
        local UICorner_3 = utils.create('UICorner', {
                CornerRadius = UDim.new(0, 3192),
                Parent = Minimize,
        })
        local ImageButton = utils.create('ImageButton', {
                Parent = TopBar,
                AnchorPoint = Vector2.new(0.5, 0.5),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Position = UDim2.new(0.930000007, 0, 0.5, 0),
                Size = UDim2.new(0, 15, 0, 15),
                AutoButtonColor = false,
                Image = "rbxassetid://11422927659",
                ImageColor3 = Color3.fromRGB(110, 106, 134),
        })
        local Info = utils.create('Frame', {
                Name = "Info",
                Parent = Content,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                BorderColor3 = Color3.fromRGB(0, 0, 0),
                BorderSizePixel = 0,
                Position = UDim2.new(0, 0, 0.137037039, 0),
                Size = UDim2.new(1, 0, 0.862962961, 0),
        })
        local UIPadding = utils.create('UIPadding', {
                Parent = Info,
                PaddingLeft = UDim.new(0, 10),
                PaddingTop = UDim.new(0, 12),
        })
        local UIListLayout_2 = utils.create('UIListLayout', {
                Parent = Info,
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 3),
        })
    
        utils.dragify(CanvasGroup, TopBar, 0.08, BackgroundFrame)
    
        local window = {}
    
        window.createField = function(name, value)
            local Button = utils.create('Frame', {
                Name = "Button",
                Parent = Info,
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                Size = UDim2.new(1, 0, 0, 40),
                -- // Generated by natsu.ps1#4977's plugin
            })
            local Frame = utils.create('Frame', {
                    Parent = Button,
                    AnchorPoint = Vector2.new(0.5, 0.5),
                    BackgroundColor3 = Color3.fromRGB(25, 23, 28),
                    BackgroundTransparency = 0.900,
                    Position = UDim2.new(0.5, -5, 0.5, 0),
                    Size = UDim2.new(0.899999976, 0, 0.899999976, 0),
                    -- // Generated by natsu.ps1#4977's plugin
            })
            local UICorner = utils.create('UICorner', {
                    CornerRadius = UDim.new(0, 6),
                    Parent = Frame,
                    -- // Generated by natsu.ps1#4977's plugin
            })
            local UIStroke = utils.create('UIStroke', {
                    Color = Color3.fromRGB(196, 167, 231),
                    Transparency = 0.800,
                    Parent = Frame,
                    -- // Generated by natsu.ps1#4977's plugin
            })
            local TextLabel = utils.create('TextLabel', {
                    Parent = Frame,
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0, 13, 0, 0),
                    Size = UDim2.new(0, 120, 1, 0),
                    Font = Enum.Font.Gotham,
                    Text = name .. ": " .. value,
                    TextColor3 = Color3.fromRGB(224, 222, 244),
                    TextSize = 14.000,
                    TextTransparency = 0.200,
                    TextXAlignment = Enum.TextXAlignment.Left,
                    -- // Generated by natsu.ps1#4977's plugin
            })
    
            CanvasGroup.Size = UDim2.new(CanvasGroup.Size.X.Scale, CanvasGroup.Size.X.Offset, CanvasGroup.Size.Y.Scale, CanvasGroup.Size.Y.Offset + 40)
    
            local shit = {}
    
            shit.updateInfo = function(_value)
                TextLabel.Text = name .. ": " .. _value
            end
    
            return shit
        end
    
        return window
    end
    
    local window = lib.createWindow()
    local Hubname = window.createField("Hub Name: ", "DaNeKo Hub")
    local Status = window.createField("Status: ", "Loaded")
    local Error = window.createField("Check: ", "None")
    local Error2 = window.createField("Check2: ", "None")
    local Statusfarm = window.createField("Statusfarm: ", "None")
    local Gem = window.createField("Gem: ", "None")
    local Fruit = window.createField("Fruit: ", "None")
    ----- UI lib
    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
    local Client = require(game.ReplicatedStorage.Library.Client)
    local loirequire, kcj = pcall(function()
        local Library = require(game:GetService("ReplicatedStorage").Library)
    end)
    if loirequire == false then
        Status.updateInfo("Error! Fail Require module, Wait rejoin")
        wait(4)
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
    else
        local Library = require(game:GetService("ReplicatedStorage").Library)
    end
    local Library = require(game:GetService("ReplicatedStorage").Library)
    local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
    print("dau cac ngu")
    hookfunction(debug.getupvalue(Client.Network.Fire,1),function() return true end)
    hookfunction(debug.getupvalue(Client.Network.Invoke,1),function() return true end)
    hookfunction(debug.getupvalue(Library.Network.Invoke, 1), function() return true end)
    hookfunction(debug.getupvalue(Library.Network.Fire, 1), function() return true end)
    v1.WorldCmds.CanDoAction = function() return true end
    local hihi = getsenv(game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.GUIs.Teleport)
    local plr = game.Players.LocalPlayer
    local controls = require(game.Players.LocalPlayer.PlayerScripts.PlayerModule):GetControls()
    function getdafarm()
        return #Client.PetCmds.GetEquipped()
    end
    local vitribank = Vector3.new(229.9514923095703, 98.11483001708984, 360.9400329589844)
    function bankloaded()
        return game:GetService("Players").LocalPlayer.PlayerGui.BankLoading.Enabled
    end
    Client.Network.Invoke("Equip Best Pets")
    yowtf = 0
    spawn(function()
        while true do wait(1)
            pcall(function()
                if (plr.Character.HumanoidRootPart.Position - vitribank).Magnitude < 10 then
                    yowtf = yowtf + 1
                    Error.updateInfo("Near Bank Time: " .. tostring(yowtf) .. " 300s rejoin")
                    if yowtf == 60 * 3 then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
                    end
                else
                    yowtf = yowtf - 1
                end
            end)
        end
    end)
    yowtf1 = 0
    spawn(function()
        while true do wait(1)
            pcall(function()
                if bankloaded() then
                    yowtf1 = yowtf1 + 1
                    Error.updateInfo("Load Bank Time: " .. tostring(yowtf1) .. " 300s rejoin")
                    if yowtf1 == 60 * 3 then
                        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId, game.Players.LocalPlayer)
                    end
                else
                    yowtf1 = yowtf1 - 1
                end
            end)
        end
    end)
    local originalPlay = Library.Audio.Play
    Library.Audio.Play = function(...) 
    if checkcaller() then
        local audioId, parent, pitch, volume, maxDistance, group, looped, timePosition = unpack({ ... })
        if type(audioId) == "table" then
            audioId = audioId[Random.new():NextInteger(1, #audioId)]
        end
        if not parent then
            warn("Parent cannot be nil", debug.traceback())
            return nil
        end
        if audioId == 0 then return nil end
        
        if type(audioId) == "number" or not string.find(audioId, "rbxassetid://", 1, true) then
            audioId = "rbxassetid://" .. audioId
        end
        if pitch and type(pitch) == "table" then
            pitch = Random.new():NextNumber(unpack(pitch))
        end
        if volume and type(volume) == "table" then
            volume = Random.new():NextNumber(unpack(volume))
        end
        if group then
            local soundGroup = game.SoundService:FindFirstChild(group) or nil
        else
            soundGroup = nil
        end
        if timePosition == nil then
            timePosition = 0
        else
            timePosition = timePosition
        end
        local isGargabe = false
        if not pcall(function() local _ = parent.Parent end) then
            local newParent = parent
            pcall(function()
                newParent = CFrame.new(newParent)
            end)
            parent = Instance.new("Part")
            parent.Anchored = true
            parent.CanCollide = false
            parent.CFrame = newParent
            parent.Size = Vector3.new()
            parent.Transparency = 1
            parent.Parent = workspace:WaitForChild("__DEBRIS")
            isGargabe = true
        end
        local sound = Instance.new("Sound")
        sound.SoundId = audioId
        sound.Name = "sound-" .. audioId
        sound.Pitch = pitch and 1
        sound.Volume = volume and 0.5
        sound.SoundGroup = soundGroup
        sound.Looped = looped and false
        sound.MaxDistance = maxDistance and 100
        sound.TimePosition = timePosition
        sound.RollOffMode = Enum.RollOffMode.Linear  
        sound.Parent = parent
        if not require(game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Client")).Settings.SoundsEnabled then
            sound:SetAttribute("CachedVolume", sound.Volume)
            sound.Volume = 0
        end
        sound:Play()
        getfenv(originalPlay).AddToGarbageCollection(sound, isGargabe)
        return sound
    end
    return originalPlay(...)
    end
    ---------------------------------------------------------------------------------------------------
    if v1.WorldCmds.HasArea("Mystic Mine") == false then
        getgenv().chestselect = {"World Yellow Lucky Block", "World Blue Lucky Block", "World Pink Lucky Block", "World Rainbow Lucky Block"} -- "World Yellow Lucky Block", "World Blue Lucky Block", "World Pink Lucky Block", "World Rainbow Lucky Block" (support lucky area block)
        _G.vitribanchon = 1 -- 1->5 (only lucky area)
        getgenv().farmabcxyz = "double" -- single
        getgenv().methodchange = "So Luong Fruit" -- Check Theo Thoi Gian ( day la method doi map)
        getgenv().areafarm1 = "Pixel Alps" -- Axolotl Deep Ocean
        getgenv().timemap1 = 100 -- Min, hoac so luong fruit
        getgenv().areafarm2 = getgenv().unlock_spawn_to_map
        getgenv().timemap2 = 200 -- Min, hoac so luong fruit
        getgenv().tgianne = 1
        getgenv().methodhutgem = "Old" -- new
        getgenv().startresetfruit = true
        getgenv().resetfruit30min = true
        getgenv().countdaycare = 10
        getgenv().autodaycare = false
        getgenv().soluonggem = 70000000000
        getgenv().autosendgem = false
        getgenv().fruitslect = {"Orange", "Apple"}
        getgenv().methodautofarm = "New"
        getgenv().turnonfarmgiant = false
        getgenv().whitescreen = false
        getgenv().autodaily = true
        getgenv().walkauto = true
        getgenv().farmranknek = true
        -- getgenv().bankdefault = "dd27e3f7-ffa0-48d7-a958-d9b643d99064"
        local vitricuabank = Vector3.new(231.22198486328125, 98.11483001708984, 358.1041259765625)
        local vitrimail = Vector3.new(254.9382781982422, 98.11483001708984, 352.31182861328125)
        local v48 = v1.Save.Get()
        function havenearbank()
            for i,v in pairs(game.Players:GetChildren()) do
                if v.Name ~= plr.Name then
                    if (v.Character.HumanoidRootPart.Position - vitricuabank).Magnitude < 10 then
                        Statusfarm.updateInfo("Have player near bank (wait)")
                    end
                end
            end
            return false
        end
        function teleportto(texta)
            print(hihi.Teleport(texta,true))
        end
        function indexpet()
            a = 0
            for i,v in pairs(v48.Pets) do
                if v48.Pets[i]["s"] >= 100000000000000000 then
                    a = a + 1   
                end
            end
            return a
        end
    
        function getmybank()
            print("Cac")
            if bankloaded() == false then
                if getgenv().doneleave ~= true then
                    for i,v in pairs(Client.Network.Invoke("Get My Banks")) do
                        if v.Owner ~= game.Players.LocalPlayer.UserId then
                            return v.BUID
                        end
                    end
                    return false
                end
                return false
            end
            return false
        end
    
        local vitrirs = Vector3.new(232.1697235107422, 98.11483001708984, 312.91363525390625)
        local vitribank = Vector3.new(229.9514923095703, 98.11483001708984, 360.9400329589844)
        local vitrimerchan = Vector3.new(-389.8507995605469, 98.14244842529297, 90.26082611083984)
        function checknearbank()
            if (plr.Character.HumanoidRootPart.Position - vitribank).Magnitude < 10 then
                return true
            end
            return false
        end
    
        local v17 = v1.Directory.Areas["Shop"]
        function autofixUI()
            if checknearbank() and checkisbank() == false then
                tweenfarasm(vitrirs,CFrame.new(vitrirs))
                tweenfarasm(vitribank,CFrame.new(vitribank))
            end
        end
        function teleportto(texta)
            print(hihi.Teleport(texta,true))
        end
        function fireButton1(button)
            for i,signal in next, getconnections(button.Activated) do 
                signal:Function()
            end
        end
        function clickman(a)
            spawn(function()
                fireButton1(a)
            end)
        end
        function getinvite()
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
                if string.find(v.Name, "INVITE") then
                    local a = string.gsub(v.Player.Text, "@", "")
                    print(getgenv().Nameaccmain, a)
                    if a == getgenv().Nameaccmain then
                        return v
                    end
                end
            end
            return false
        end
        function stringfind(a,b)
            if string.find(a,b) then
                return true
            end
            return false
        end
        function getinvite2()
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
                if not stringfind(v.Name, "INVITE") then
                    if string.len(v.Name) > 30 then
                        if v.Owner.Text == tostring("@" .. getgenv().Nameaccmain) then
                            return v
                        end
                    end
                end
            end
            return false
        end
        function ismes()
            return game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled
        end
        function checkisbank()
            return game:GetService("Players").LocalPlayer.PlayerGui.Bank.Enabled
        end
        local v17 = v1.Directory.Areas["Shop"]
        function tweenfarasm(targetPos, targetCFrame)
            if v1.WorldCmds.Get() == v17.world then
                local gay = (targetPos-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                local Tween = game:GetService('TweenService'):Create(
                    game.Players.LocalPlayer.Character.HumanoidRootPart,
                    TweenInfo.new(
                        gay / 50, 
                        Enum.EasingStyle.Linear
                    ),
                    {CFrame = targetCFrame * CFrame.new(0,0,0)}
                )
                Tween:Play()
                Tween.Completed:Wait()
            else
                teleportto("Shop")
            end
        end 
    
        function haveslot()
            local dbuaz = game:GetService("Players").LocalPlayer.PlayerGui.Main.Bottom.Inventory.Equipped.Text
            local slotpet = string.split(dbuaz, "/")
            if tonumber(slotpet[2]) >= 11 then
                return true
            end
            return false
        end
    
        function autocollectslot()
            if haveslot() == false then
                print(Client.Network.Invoke("Redeem Pet Collection"))
            end
            return true
        end
    
        repeat wait(1)
            print("Azaza")
            Statusfarm.updateInfo("Collect Slot")
            autocollectslot()
        until haveslot() == true
        Statusfarm.updateInfo("Collect Slot Done")
        function azowtf()
            pcall(function()
                if havenearbank() == false then
                    if indexpet() < 11 then
                        Statusfarm.updateInfo("Go to bank")
                        if getmybank() == false then
                            if v1.WorldCmds.Get() == v17.world then
                                if getmybank() == false then
                                    if checkisbank() == false then
                                        if v1.WorldCmds.Get() == v17.world then
                                            autofixUI()
                                            if not checknearbank() then
                                                tweenfarasm(vitribank,CFrame.new(vitribank))
                                            end
                                        else
                                            teleportto("Shop")
                                        end
                                    else
                                        if not checknearbank() then
                                            tweenfarasm(vitribank,CFrame.new(vitribank))
                                        else
                                            if getinvite() ~= false then
                                                print("get success")
                                                clickman(getinvite())
                                            end
                                            wait(5)
                                            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Do you want to accept this invite?" then
                                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                                            else
                                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
                                            end
                                            wait(2)
                                            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                                            end
                                            Statusfarm.updateInfo("Wait send gem")
                                            wait(10)
                                            Client.Network.Invoke("Bank Deposit",getmybank(),{} ,get("Diamonds"))
                                        end
                                    end
                                end
                            else
                                teleportto("Shop")
                            end
                        else
                            Statusfarm.updateInfo("Setup get 11 pet")
                            getgenv().gettablepet = {}
                            getgenv().toiuutable = Client.Network.Invoke("Get Bank", getmybank()).Storage.Pets
                            for i,v in pairs(toiuutable) do
                                if #getgenv().gettablepet < 11 then
                                    table.insert(getgenv().gettablepet, v.uid)
                                end
                            end
                            Client.Network.Invoke("Bank Withdraw",getmybank(),getgenv().gettablepet ,100000000)
                        end
                    else
                        Client.Network.Invoke("Equip Best Pets")
                    end
                end
            end)
        end
    
        while indexpet() < 11 do wait(5)
            local a,b = pcall(function()
                if v1.WorldCmds.Get() == v17.world then
                    azowtf()
                    Statusfarm.updateInfo("Start Get Pet")
                else
                    teleportto("Shop")
                end
            end)
            print(a,b)
        end
    
        function azazazaz()
            if v1.WorldCmds.Get() == v17.world then
                if v1.WorldCmds.Get() == v17.world then
                    if checkisbank() == false then
                        if v1.WorldCmds.Get() == v17.world then
                            autofixUI()
                            if not checknearbank() then
                                tweenfarasm(vitribank,CFrame.new(vitribank))
                            end
                        else
                            teleportto("Shop")
                        end
                    else
                        if not checknearbank() then
                            tweenfarasm(vitribank,CFrame.new(vitribank))
                        else
                            if getinvite2() ~= false then
                                clickman(getinvite2()) 
                                wait(3)
                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Container.Bank.Bottom.Leave)
                                wait(3)
                                if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Are you sure you want to leave this bank?" then
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                                    Statusfarm.updateInfo("Leave Bank Success!")
                                    getgenv().doneleave = true
                                else
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
                                end
                                wait(2)
                                if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                                end
                                wait(10)
                            end
                        end
                    end
                else
                    teleportto("Shop")
                end
            end
        end
    
        while (getgenv().doneleave ~= true and getmybank() ~= false) do wait(5)
            pcall(function()
                Statusfarm.updateInfo("Leave Bank!")
                tweenfarasm(vitricuabank, CFrame.new(vitricuabank))
                azazazaz()
            end)
        end
    
        Client.Network.Invoke("Equip Best Pets")
    
        function checkhasmail()
            if Client.Network.Invoke("Get Mail") then
                return true
            end
            return false
        end
    
        function havemail()
            if checkhasmail() then
                for i,v in pairs(Client.Network.Invoke("Get Mail").Inbox) do
                    return true
                end
            end
            return false
        end
    
        while havemail() do wait(5)
            pcall(function()
                if v1.WorldCmds.Get() == v17.world then
                    Statusfarm.updateInfo("Claim Mail")
                    tweenfarasm(vitrimail, CFrame.new(vitrimail))
                    wait(5)
                    Client.Network.Invoke("Claim All Mail")
                else
                    teleportto("Shop")
                end
            end)
        end
    
        local tablecoins = {}
    
        local a = require(game:GetService("ReplicatedStorage").__DIRECTORY.Upgrades.Upgrades)
    
        for i,v in pairs(a) do
            if v.currency == "Diamonds" then
                table.insert(tablecoins, i)
            end
        end
    
        function getupr()
            for i,v in pairs(tablecoins) do
                if Library.Save.Get().Upgrades[v] == nil or Library.Save.Get().Upgrades[v] < 5 then
                    return v 
                end
            end
            return false
        end
    
        while getupr() ~= false do wait(1)
            pcall(function()
                tweenfarasm(vitrimerchan, CFrame.new(vitrimerchan))
                if v1.WorldCmds.Get() == v17.world then
                    Statusfarm.updateInfo("Auto Upgrade diamond merchan")
                    Client.Network.Invoke("Buy Upgrade", getupr())
                end
            end)
        end
    
        ----------------------------------------------------------------------------------------------------
    
        function autoupdate2()
            getgenv().petsimz = {}
            if getgenv().methodautofarm == "Old" then
            else
                local Pets = Client.PetCmds.GetEquipped()
                local cac = 0
                local a = {}
                local b = {}
                for _, Pet in pairs(Pets) do
                    table.insert(b, Pet.uid)
                end
                for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                    if v.a == getgenv().mapdefault then
                        if workspace.__THINGS.Coins:FindFirstChild(i) then
                            table.insert(a,i)
                        end
                    end
                end
                local result = {}
                for i = 1, math.min(#a, #b) do
                    result[a[i]] = b[i]
                end
                for key, value in pairs(result) do
                    getgenv().petsimz[value] = key
                end
                return getgenv().petsimz
            end
        end
    
        function checkgaint()
            if getgenv().turnonfarmgiant == true then
                for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                    if v.a == "Mystic Mine" and string.find(v.n, "Giant") then
                        if workspace.__THINGS.Coins:FindFirstChild(i) then
                            return {i,v.p}
                        end
                    end
                end
            end
            return false
        end
    
        local vitrilucky = {
            ["1"] = CFrame.new(-278.0175476074219, 280.28961181640625, 1582.909423828125),
            ["2"] = CFrame.new(-142.0844268798828, 205.1637420654297, 1621.3187255859375),
            ["3"] = CFrame.new(-41.142391204833984, 190.16372680664062, 1540.5394287109375),
            ["4"] = CFrame.new(-318.45367431640625, 255.66372680664062, 1383.4219970703125),
            ["5"] = CFrame.new(-186.7466583251953, 205.16372680664062, 1393.80029296875),
        }
    
        function teleportto(texta)
            print(texta)
            print(hihi.Teleport(texta,true))
        end
    
        local adudarkqua = {
            ["Axolotl Deep Ocean"] = Vector3.new(4250.3017578125, -12.059213638305664, 3788.037353515625),
            ["Mystic Mine"] = Vector3.new(9021.90234375, -33.249011993408203, 2506.343994140625),
            ["Pixel Alps"] = Vector3.new(3897.318115234375, -39.473529815673828, 2440.701904296875),
        }
    
        function createnew(name, vector)
            local part = Instance.new("Part",game.Workspace)
            part.Name = name
            part.Position = vector
            part.Size = Vector3.new(60, 3, 65)
            part.Anchored = true
        end
    
        for i,v in pairs(adudarkqua) do
            createnew(i, v)
        end
    
        function aasda()
            if checkgaint() == false or getgenv().mapdefault == "Axolotl Deep Ocean" then
                if getgenv().mapdefault == "Lucky Block Area" then
                    local v17 = v1.Directory.Areas[getgenv().mapdefault]
                    if v1.WorldCmds.Get() ~= v17.world then
                        teleportto(getgenv().mapdefault)
                    else
                        plr.Character.HumanoidRootPart.CFrame = vitrilucky[tostring(_G.vitribanchon)]
                    end
                    for i,v in pairs(autoupdate2()) do
                        Client.Network.Invoke('Join Coin', v, {i})
                        Client.Network.Fire('Farm Coin', v, i)
                    end
                else
                    local v17 = v1.Directory.Areas[getgenv().mapdefault]
                    if v1.WorldCmds.Get() == v17.world and adudarkqua[getgenv().mapdefault] and adudarkqua[getgenv().mapdefault] ~= nil then
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - adudarkqua[getgenv().mapdefault]).Magnitude > 20 then
                            plr.Character.HumanoidRootPart.CFrame = CFrame.new(adudarkqua[getgenv().mapdefault]) * CFrame.new(0,10,0)
                        end
                    else
                        teleportto(getgenv().mapdefault)
                    end
                    Statusfarm.updateInfo("Farm Fruit, Unlock Map")
                    for i,v in pairs(autoupdate2()) do
                        Client.Network.Invoke('Join Coin', v, {i})
                        Client.Network.Fire('Farm Coin', v, i)
                    end
                end
            else
                getgenv().autowalkne = false
                plr.Character.HumanoidRootPart.CFrame = CFrame.new(checkgaint()[2])
                for i,v in pairs(Client.PetCmds.GetEquipped()) do
                    Client.Network.Invoke('Join Coin', checkgaint()[1], {v.uid})
                    Client.Network.Fire('Farm Coin', checkgaint()[1], v.uid)
                end
            end
        end
    
        local itemboost = {
            "Triple Coins",
            "Triple Damage",
            "Super Lucky",
            "Ultra Lucky"
        }
    
        function getboost()
            local v48 = v1.Save.Get();
            for i,v in pairs(v48.BoostsInventory) do
                if tonumber(v) ~= 0 then
                    Client.Network.Fire("Activate Boost",i)
                end
            end
        end
        local humanoid = game.Players.LocalPlayer.Character.Humanoid
        -- (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(9021.90234375, -13.249011993408203, 2506.343994140625)).Magnitude
        function autowalk()
            if getgenv().autowalkne == true then
                controls:Enable()
                local humanoid = game.Players.LocalPlayer.Character.Humanoid
                local rootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
                local jumpHeight = 10 -- Độ cao nhảy
                local function onTouched(part)
                    if part:IsDescendantOf(workspace) then
                        humanoid.Jump = true
                    end
                end
                rootPart.Touched:Connect(onTouched)
                local radius = 40
                local center = rootPart.Position
                if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - adudarkqua[getgenv().mapdefault]).Magnitude < 45 then
                    repeat wait(1)
                        for angle = 0, 360, 10 do
                            local radians = math.rad(angle)
                            local xOffset = math.cos(radians) * radius
                            local zOffset = math.sin(radians) * radius
                            local destination = center + Vector3.new(xOffset, 0, zOffset)
                            humanoid:MoveTo(destination)
                            humanoid.MoveToFinished:Wait()
                            humanoid.Jump = false
                            if angle == 360 then
    
                            end
                        end
                    until getgenv().autowalkne == false or (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - adudarkqua[getgenv().mapdefault]).Magnitude > 45
                else
                    humanoid:MoveTo(adudarkqua[getgenv().mapdefault])
                end
            end
        end
    
        spawn(function()
            while true do wait(1)
                pcall(autowalk)
            end
        end)
    
        spawn(function()
            while true do wait(1)
                local a,b = pcall(getboost)
            end
        end)
    
        spawn(function()
            while true do wait(getgenv().tgianne)
                if not getgenv().startdc and not getgenv().collectdc and getgenv().sendgemnek == false then
                    local a,b = pcall(aasda)
                    print(a,b)
                end
            end
        end)
    
        spawn(function()
            while true do wait()
                if getgenv().resetfruit30min then
                    if getgenv().startresetfruit == false then
                        local tickna = tick()
                        repeat wait()
                        until tick() - tickna >= 60 * 60
                        getgenv().startresetfruit = true
                    end
                end
            end
        end)
    
        function checkfruit()
            soluong = 0
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.Boosts:GetChildren()) do
                if v.Name == "Orange" or v.Name == "Apple" then
                    local zad = string.gsub(v.TimeLeft.Text , "x" ,"")
                    soluong = soluong + tonumber(zad)
                end
            end
            return soluong
        end
        getgenv().farmmerne = false
    
        function vailonluondaucatmoi()
            local mapList = {}
            local getmaptp = game:GetService("Players").LocalPlayer.PlayerGui.Teleport.Frame.LeftContainer.Holder
            for i,v in pairs(getmaptp:GetChildren()) do
                if v:IsA("TextButton") and v.Name ~= "WorldTemplate" then
                    table.insert(mapList, v.Name)
                end
            end
    
            local mapTable = {}
            for i, mapName in ipairs(mapList) do
                mapTable[i] = {name = mapName, data = {}}
            end
    
            local gateanother = {}
    
            for i, mapData in pairs(mapTable) do
                if mapData.name ~= "Hardcore" and mapData.name ~= "Claw" and mapData.name ~= "Yeet" then
                    dbuoi = nil
                    local a,b = pcall(function() 
                        dbuoi = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Areas["areas | " .. mapData.name .. " World"])
                    end)
                    if a == false then
                        dbuoi = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Areas["areas | " .. mapData.name])
                    end
                    dcac = nil
                    local a,b = pcall(function() 
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds["worlds | " .. mapData.name])
                    end)
                    if a == false then
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds[mapData.name])
                    elseif v == "Hardcore" then
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds["worlds | " .. mapData.name])
                    else
                        dcac = require(game:GetService("ReplicatedStorage")["__DIRECTORY"].Worlds["worlds | " .. mapData.name])
                    end
                    for i2,v2 in pairs(dbuoi) do
                        if v2.hidden == false and v2.isVIP == nil and (v2.mult ~= 0 or dcac[mapData.name].gravity ~= nil) then
                            if v2.gate == nil then
                                if i2 ~= "Shop" then
                                    table.insert(mapData.data, {i2, 0,dcac[mapData.name].mainCurrency})
                                end
                            else
                                if v2.isShop == false then
                                    if v2.gate.currency == dcac[mapData.name].mainCurrency then
                                        table.insert(mapData.data, {i2, v2.gate.cost,v2.gate.currency})
                                    else
                                        table.insert(gateanother, {i2, v2.gate.cost, v2.gate.currency})
                                    end
                                    for i3,v3 in pairs(gateanother) do
                                        if v3[3] == dcac[mapData.name].mainCurrency then
                                            table.insert(mapData.data, {v3[1], v3[2], v3[3]})
                                            table.remove(gateanother, i3)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            for i,v in pairs(mapTable) do
                table.sort(v.data, function(a,b) return a[2] < b[2] end)
            end
            return mapTable
        end
        function getmapautoup()
            for i,v in pairs(vailonluondaucatmoi()) do
                for i1,v2 in pairs(v.data) do 
                    if v1.WorldCmds.HasArea(v2[1]) == false then
                        if i1 - 1 == 0 then
                            return {v.data[i1][1],v.data[i1][1],v.data[i1][2],v.data[i1][3]}
                        else
                            return {v.data[i1 - 1][1],v.data[i1][1],v.data[i1][2],v.data[i1][3]}
                        end
                    end
                end
            end
        end
    
        function gethugepet()
            local v48 = v1.Save.Get()
            for i,v in pairs(v48.Pets) do 
                if not tablefind(petblacklist , v48.Pets[i]["uid"]) then
                    local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                    if checkne.rarity == "Exclusive" and (v48.Pets[i].l == nil or v48.Pets[i].l == false) and v48.Pets[i].s ~= nil and v48.Pets[i].s ~= 0 then
                        return v48.Pets[i]["uid"]
                    end
                end
            end
            return false
        end
    
        spawn(function()
            while true do wait()
                pcall(function()
                    if getgenv().farmranknek == false then
                        if getgenv().startresetfruit == true then
                            getgenv().mapdefault = getgenv().areafarm1
                            local tickne = tick()
                            repeat wait()
                            until tick() - tickne > 120
                            getgenv().startresetfruit = false
                        else
                            if getgenv().farmabcxyz == "double" then
                                if getgenv().methodchange == "So Luong Fruit" then
                                    if checkfruit() >= getgenv().timemap2 then
                                        getgenv().farmmerne = true
                                        getgenv().mapdefault = getgenv().areafarm2
                                    end
                                    if checkfruit() < getgenv().timemap1 or (checkfruit() > getgenv().timemap1 and checkfruit() < getgenv().timemap2) then
                                        if getgenv().farmmerne == true then
                                            if checkfruit() <= getgenv().timemap1 then
                                                getgenv().mapdefault = getgenv().areafarm1
                                                getgenv().farmmerne = false
                                            end
                                        end
                                        if getgenv().farmmerne == false then
                                            getgenv().mapdefault = getgenv().areafarm1
                                        end
                                    end
                                else
                                    local map1 = tick()
                                    repeat wait()
                                        getgenv().mapdefault = getgenv().areafarm1
                                    until tick() - map1 >= getgenv().timemap1 * 60
                                    local map2 = tick()
                                    repeat wait()
                                        getgenv().mapdefault = getgenv().areafarm2
                                    until tick() - map2 >= getgenv().timemap2 * 60
                                end
                            else
                                getgenv().mapdefault = getgenv().areafarm1
                            end
                        end
                    else
                        if v1.WorldCmds.HasArea(getgenv().areafarm2) == true then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Main.Right.Rank.RankName.Text ~= "PET OVERLORD" then
                                if checkfruit() >= getgenv().timemap2 then
                                    getgenv().farmmerne = true
                                    getgenv().mapdefault = getgenv().areafarm2
                                end
                                if checkfruit() < getgenv().timemap1 or (checkfruit() > getgenv().timemap1 and checkfruit() < getgenv().timemap2) then
                                    if getgenv().farmmerne == true then
                                        if checkfruit() <= getgenv().timemap1 then
                                            getgenv().mapdefault = getgenv().areafarm1
                                            getgenv().farmmerne = false
                                        end
                                    end
                                    if getgenv().farmmerne == false then
                                        getgenv().mapdefault = getgenv().areafarm1
                                    end
                                end
                            else
                                Statusfarm.updateInfo("Buy Diamond Cave")
                                if v1.WorldCmds.HasArea("Mystic Mine") == true then
                                    game:Shutdown()
                                end
                                print("a haaaa")
                                Client.Network.Invoke("Buy Area", "Diamond Mine")
                                getgenv().mapdefault = "Diamond Mine"
                                Client.Network.Invoke("Buy Area", "Paradise Cave")
                                Client.Network.Invoke("Buy Area", "Cyber Cavern")
                                function gethuge()
                                    local vloz = {}
                                    local v48 = v1.Save.Get()
                                    for i,v in pairs(v48.Pets) do 
                                        local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                                        if checkne.rarity == "Exclusive" then
                                            table.insert(vloz, v48.Pets[i]["uid"])
                                        end
                                    end
                                    return vloz
                                end
                                Client.Network.Invoke("Diamond Mine: Release Pet", "Mystic Mine", gethuge()[1])
                            end
                        else
                            getgenv().mapdefault = getmapautoup()[1]
                            if getmapautoup()[2] == "The Void" then
                                function ahasud()
                                    Client.Network.Fire("Start Hacker Portal Quests")
                                    local l__IsHardcore__2 = v1.Shared.IsHardcore;
                                    local v3 = v1.Save.Get();
                                    local v4, v5 = unpack(l__IsHardcore__2 and v3.Hardcore.HackerPortalProgress or v3.HackerPortalProgress);
                                    if 1 < v5 then
                                        v5 = 1;
                                        v4 = v1.Shared.HackerPortalQuests[1];
                                    end;
                                    local v6 = v1.Shared.HackerPortalQuests[v5];
                                    local v7 = v6 - v4
                                    return v7
                                end
                                if ahasud() > 0 then
                                    getgenv().mapdefault = "Hacker Portal"
                                else
                                    Client.Network.Invoke("Finish Hacker Portal Quest")
                                    teleportto2("The Void")
                                end
                            else
                                getgenv().mapdefault = getmapautoup()[1]
                                if get(getmapautoup()[4]) >= getmapautoup()[3] then
                                    Client.Network.Invoke("Buy Area", getmapautoup()[2])
                                end
                            end
                        end
                        wait(5)
                    end
                end)
            end
        end)
    
        local Orbs = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Orbs)
        local Lootbags = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Lootbags)
        function lootbag(v1)
            Lootbags.Collect(v1)
        end
        function lootorb(v1)
            Orbs.Collect(v1)
        end
        if getgenv().methodhutgem == "Old" then
            workspace.__THINGS.Orbs.ChildAdded:Connect(function(v)
                pcall(lootorb(v))
            end)
            workspace.__THINGS.Lootbags.ChildAdded:Connect(function(v)
                pcall(lootbag(v))
            end)
        else
            spawn(function()
                pcall(function()
                    while true do wait(.2)
                        pcall(function()
                            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
                                v.CanCollide = false
                                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                            end
                        end)
                    end
                end)
            end)
            
            spawn(function()
                pcall(function()
                    while true do wait(.2)
                        pcall(function()
                            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetChildren()) do
                                v.CanCollide = false
                                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                            end
                        end)
                    end
                end)
            end)
        end
    
        function ahih1i(num)
            if num == 0 then
                return
            end
            local v48 = v1.Save.Get()
            local petmain = {}
            local petblacklist = {}
            getgenv().resultpet = {}
            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Pets:GetChildren()) do
                table.insert(petblacklist, v.Name)
            end
            for i,v in pairs(v48.Pets) do 
                if not table.find(petblacklist , v48.Pets[i]["uid"]) then
                    local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                    if checkne.rarity ~= "Event" then
                        table.insert(petmain, {tonumber(v48.Pets[i]["s"]), v48.Pets[i]["uid"]})
                    end
                end
            end
    
            if num == 1 and num ~= 0 then
                numreal = 1
            else
                numreal = num/2
            end
    
            for i =1 , numreal do 
                local index = 0
                local maxmath = -math.huge
                for j = 1 , #petmain do
                    if maxmath < petmain[j][1] then
                        maxmath = petmain[j][1]
                        jack5triu = petmain[j][2]
                        index = j
                    end
                end
                table.insert(resultpet , jack5triu)
                table.remove(petmain , index)
            end
        end
    
        function candaycarene()
            local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
            local v65 = v1.Save.Get()
            if v1.Shared.IsHardcore then
                v67 = v65.DaycareHardcoreQueue
            else
                v67 = v65.DaycareQueue
            end
            return #v67
        end
    
        getgenv().cacdbuoi = false
    
        function autodaycare()
            ahih1i(getgenv().countdaycare - candaycarene())
            if candaycarene() < getgenv().countdaycare and #getgenv().resultpet > 0 then
                getgenv().startdc = true
                teleportto("Spawn")
                if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                    teleportto("Spawn")
                end
                plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
                controls:Disable()
                wait(2)
                Client.Network.Invoke("Daycare: Enroll", getgenv().resultpet)
            else
                getgenv().startdc = false
            end
        end
    
        function candaycare()
            local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
            local v65 = v1.Save.Get()
            if v1.Shared.IsHardcore then
                v67 = v65.DaycareHardcoreQueue
            else
                v67 = v65.DaycareQueue
            end
            for i,v in pairs(v67) do
                return true
            end
            return false
        end
    
        function gettime()
            access = false
            local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
            local v65 = v1.Save.Get()
            if v1.Shared.IsHardcore then
                v67 = v65.DaycareHardcoreQueue
            else
                v67 = v65.DaycareQueue
            end
            for i,v in pairs(v67) do
                local u13 = v1.Shared.DaycareComputeRemainingTime(v65, v67[i])
                access = true
                if u13 > 4 then
                    return false
                end
            end
            if access == false then
                return false
            end
        end
        
    
        function collectdaycare()
            if gettime() ~= false and candaycare() then
                getgenv().collectdc = true
                teleportto("Spawn")
                if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                    teleportto("Spawn")
                end
                plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
                Client.Network.Invoke("Daycare: Claim", nil)
            else
                getgenv().collectdc = false
            end
        end
    
        spawn(function()
            while true do wait(3)
                if getgenv().countdaycare - candaycarene() ~= 0 and getgenv().autodaycare then
                    getgenv().autowalkne = false
                    pcall(autodaycare)
                else
                    getgenv().startdc = false
                end
            end
        end)
    
        spawn(function()
            while true do wait(1)
                if getgenv().autowalkne then
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
                    wait(4)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
                end
            end
        end)
    
        spawn(function()
            while true do wait(5)
                if candaycare() and gettime() ~= false and getgenv().sendgemnek == false then
                    getgenv().autowalkne = false
                    pcall(collectdaycare)
                else
                    getgenv().collectdc = false
                end
            end
        end)
    
        local Save = v1.Save.Get
        local Commas = v1.Functions.Commas
    
        function get(thistype)
            if game.PlaceId == 10321372166 and string.find(string.lower(thistype), "coins") then
                return Save().HardcoreCurrency[thistype]
            else
                return Save()[thistype]
            end
        end
    
        function ComposeMail(name,Diamond)    
            return {
                Recipient = tostring(name), 
                Message = "", 
                Pets = {}, 
                Diamonds = tonumber(Diamond),
            };
        end;
        function sendneknek(a,b)
            print("adubuqua")
            print(Client.Network.Invoke("Send Mail",ComposeMail(a,b)))
        end
    
        function sendgem11()
            if get("Diamonds") >= getgenv().soluonggem + 100000 then
                Client.Network.Invoke("Buy Trading Plaza")
                getgenv().sendgemnek = true
                teleportto("Shop")
                wait(5)
                plr.Character.HumanoidRootPart.CFrame = CFrame.new(257.4012756347656, 97.88801574707031, 351.0747985839844)
                controls:Disable()
                wait(1)
                sendneknek(getgenv().Nameaccmain,getgenv().soluonggem)
            else
                getgenv().sendgemnek = false
            end
        end
    
        spawn(function()
            while true do wait(5)
                if getgenv().autosendgem then
                    getgenv().autowalkne = false
                    pcall(sendgem11)
                else
                    getgenv().sendgemnek = false
                end
            end
        end)
    
        function toiuu()
            for i,v in next, workspace:GetDescendants() do
                pcall(function()
                    v.Transparency = 1
                end)
            end
            for i,v in next, getnilinstances() do
                pcall(function()
                    v.Transparency = 1
                    for i1,v1 in next, v:GetDescendants() do
                        v1.Transparency = 1
                    end
                end)
            end
            local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
            local g = game
            local w = g.Workspace
            local l = g.Lighting
            local t = w.Terrain
            pcall(function()
                sethiddenproperty(l,"Technology",2)
                sethiddenproperty(t,"Decoration",false)
            end)
            t.WaterWaveSize = 0
            t.WaterWaveSpeed = 0
            t.WaterReflectance = 0
            t.WaterTransparency = 0
            l.GlobalShadows = 0
            l.FogEnd = 9e9
            l.Brightness = 0
            settings().Rendering.QualityLevel = "Level01"
            for i, v in pairs(w:GetDescendants()) do
                if v:IsA("BasePart") and not v:IsA("MeshPart") then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
                    v.Transparency = 1
                elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                    v.Lifetime = NumberRange.new(0)
                elseif v:IsA("Explosion") then
                    v.BlastPressure = 1
                    v.BlastRadius = 1
                elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                    v.Enabled = false
                elseif v:IsA("MeshPart") and decalsyeeted then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                    v.TextureID = 10385902758728957
                elseif v:IsA("SpecialMesh") and decalsyeeted  then
                    v.TextureId=0
                elseif v:IsA("ShirtGraphic") and decalsyeeted then
                    v.Graphic=0
                elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
                    v[v.ClassName.."Template"]=0
                end
            end
            for i = 1,#l:GetChildren() do
                e=l:GetChildren()[i]
                if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                    e.Enabled = false
                end
            end
        end
    
        toiuu()
    
        if getgenv().whitescreen then
            local RunService = game:GetService("RunService")
            RunService:Set3dRenderingEnabled(false)
        else
            local RunService = game:GetService("RunService")
            RunService:Set3dRenderingEnabled(true)
        end
    
        game.NetworkClient.ChildRemoved:Connect(function()
            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
        end)
    
        game.Players.PlayerRemoving:connect(function(plr)
            if plr == game.Players.LocalPlayer then
                game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
            end
        end)
    
        spawn(function()
            while true do wait(60)
                if getgenv().autodaily then
                    for i = 1 , 12 do
                        Client.Network.Invoke("Redeem Free Gift", i)
                        wait(2)
                    end
                end
            end
        end)
    elseif getgenv().Onlyfarmunlockmap == false and v1.WorldCmds.HasArea("Mystic Mine") == true then
        if getgenv().methodfarmfruit ~= "1" then
            getgenv().Sv = {
                fruitstatus = false,
            }
            function create()
                if not isfile("pet sim x fruit status-".. plr.Name..".json") then
                    writefile("pet sim x fruit status-".. plr.Name..".json", game:GetService("HttpService"):JSONEncode(getgenv().Sv))
                end
            end
    
            function savesetting()
                if isfile("pet sim x fruit status-".. plr.Name..".json") then
                    writefile("pet sim x fruit status-".. plr.Name..".json", game:GetService("HttpService"):JSONEncode(getgenv().Sv))
                else
                    create()
                end    
            end
    
            function loadsetting()
                if isfile("pet sim x fruit status-".. plr.Name..".json") then
                    local a,b = pcall(function()
                        getgenv().Sv = game:GetService("HttpService"):JSONDecode(readfile("pet sim x fruit status-".. plr.Name..".json"))
                    end)
                    if a == false then
                        delfile("pet sim x fruit status-".. plr.Name..".json")
                        wait(1)
                        create()
                    end
                    return getgenv().Sv
                else
                    create()
                end
            end
            create()
            loadsetting()
        end
        
    function tablefindv2(a, b)
        getgenv().getnumb = 0
        for i, v in pairs(a) do
            for i1, v1 in pairs(b) do
                if string.find(v, v1) then
                    getgenv().getnumb = getgenv().getnumb + 1
                end
            end
        end
        return getgenv().getnumb
    end
    
    function tablefind(a,b)
        if table.find(a,b) then
            return true
        end
        return false
    end
    
    function tweenfarasm(targetPos, targetCFrame)
        local gay = (targetPos-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        local Tween = game:GetService('TweenService'):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(
                gay / 300, 
                Enum.EasingStyle.Linear
            ),
            {CFrame = targetCFrame * CFrame.new(0,20,0)}
        )
        Tween:Play()
        Tween.Completed:Wait()
    end 
    
    function autoupdate2()
        getgenv().petsimz = {}
        if getgenv().methodautofarm == "Old" then
        else
            local Pets = Client.PetCmds.GetEquipped()
            local cac = 0
            local a = {}
            local b = {}
            for _, Pet in pairs(Pets) do
                table.insert(b, Pet.uid)
            end
            for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                if v.a == getgenv().mapdefault then
                    if workspace.__THINGS.Coins:FindFirstChild(i) then
                        table.insert(a,i)
                    end
                end
            end
            local result = {}
            for i = 1, math.min(#a, #b) do
                result[a[i]] = b[i]
            end
            for key, value in pairs(result) do
                getgenv().petsimz[value] = key
            end
            return getgenv().petsimz
        end
    end
    
    function checkgaint()
        if getgenv().turnonfarmgiant == true then
            for i,v in pairs(Client.Network.Invoke('Get Coins')) do
                if v.a ~= "Axolotl Deep Ocean" and string.find(v.n, "Giant") then
                    if v.a == getgenv().mapdefault then
                        if workspace.__THINGS.Coins:FindFirstChild(i) then
                            return {i,v.p}
                        end
                    end
                end
            end
        end
        return false
    end
    
    function checkhavechest()
        for i,v in pairs(Client.Network.Invoke('Get Coins')) do
            if v.a == "Mystic Mine" then
                return true
            end
        end
        return false
    end
    
    local vitrilucky = {
        ["1"] = CFrame.new(-278.0175476074219, 280.28961181640625, 1582.909423828125),
        ["2"] = CFrame.new(-142.0844268798828, 205.1637420654297, 1621.3187255859375),
        ["3"] = CFrame.new(-41.142391204833984, 190.16372680664062, 1540.5394287109375),
        ["4"] = CFrame.new(-318.45367431640625, 255.66372680664062, 1383.4219970703125),
        ["5"] = CFrame.new(-186.7466583251953, 205.16372680664062, 1393.80029296875),
    }
    
    function teleportto(texta)
        print(hihi.Teleport(texta,true))
    end
    
    local ngohem = {
        ["Cyber Cavern"] = Vector3.new(8704,-15,3027),
        ["Mystic Mine"] = Vector3.new(9046,-14,2416),
    }
    
    function autofindchest(a)
        local cac = game:GetService("Workspace").__THINGS.Coins
        for i1,v1 in pairs(cac:GetChildren()) do
            if v1.Name == a then
                return v1
            end
        end
    end
    function autofindpet(a)
        for i1,v1 in pairs(Client.PetCmds.GetEquipped()) do
            if i1 == a then
                return v1
            end
        end
    end
    
    spawn(function()
        while true do wait(5)
            pcall(function()
                if Library.Signal.Invoke("Get Diamond Mine Collpase Time") then
                    getgenv().checkmycollect = true
                    if Library.Signal.Invoke("Get Diamond Mine Collpase Time") > 600 then
                        getgenv().Save["Mine Collapse"] = Library.Signal.Invoke("Get Diamond Mine Collpase Time")
                        saveconfig()
                    end
                else
                    print("cacaac")
                    getgenv().checkmycollect = false
                    getgenv().Save["Mine Collapse"] = 0
                    saveconfig()
                end
            end)
        end
    end)
    
     -- getgenv().walkauto , getgenv().mapdefault
     local adudarkqua = {
        ["Axolotl Deep Ocean"] = Vector3.new(4250.3017578125, -12.059213638305664, 3788.037353515625),
        ["Mystic Mine"] = Vector3.new(9006.8349609375, -61.46352005004883, 2573.74951171875),
        ["Pixel Alps"] = Vector3.new(3897.318115234375, -39.473529815673828, 2440.701904296875),
    }
    
    getgenv().vitrimapgem = {
        CFrame.new(9006.8203125, -61.46352005004883, 2573.762939453125),
        CFrame.new(9064.8271484375, -61.46352005004883, 2394.87255859375),
    }
    
    function createnew(name, vector)
        local part = Instance.new("Part",game.Workspace)
        part.Name = name
        part.Position = vector
        part.Size = Vector3.new(60, 3, 65)
        part.Anchored = true
    end
    
    for i,v in pairs(adudarkqua) do
        createnew(i, v)
    end
    
    for i,v in pairs(getgenv().vitrimapgem) do
        createnew(tostring(i), v.Position)
    end
    getgenv().dbuoiboost = false
    function isbooster()
        local a = game
        local b = a.Workspace
        local c = a.Lighting
        local d = b.Terrain
        d.WaterWaveSize = 0
        d.WaterWaveSpeed = 0
        d.WaterReflectance = 0
        d.WaterTransparency = 0
        c.GlobalShadows = false
        c.FogEnd = 9e9
        c.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for e, f in pairs(a:GetDescendants()) do
           if f:IsA("Part") or f:IsA("Union") or f:IsA("CornerWedgePart") or f:IsA("TrussPart") then
               f.Material = "Plastic"
               f.Reflectance = 0
           elseif f:IsA("Decal") or f:IsA("Texture") then
               f.Transparency = 0
           elseif f:IsA("ParticleEmitter") or f:IsA("Trail") then
               f.Lifetime = NumberRange.new(0)
           elseif f:IsA("Explosion") then
               f.BlastPressure = 0
               f.BlastRadius = 0
           elseif f:IsA("Fire") or f:IsA("SpotLight") or f:IsA("Smoke") or f:IsA("Sparkles") then
               f.Enabled = false
           elseif f:IsA("MeshPart") then
               f.Material = "Plastic"
               f.Reflectance = 0
               f.TextureID = 10385902758728957
           end
        end
        for e, g in pairs(c:GetChildren()) do
           if
               g:IsA("BlurEffect") or g:IsA("SunRaysEffect") or g:IsA("ColorCorrectionEffect") or g:IsA("BloomEffect") or
                   g:IsA("DepthOfFieldEffect")
            then
               g.Enabled = false
           end
        end
        sethiddenproperty(game.Lighting, "Technology", "Compatibility")
    end
    
    function aasda()
        if checkgaint() == false or getgenv().mapdefault == getgenv().areafarm1 then
            if getgenv().checkmycollect then
                getgenv().mapdefault = "Axolotl Deep Ocean"
                Statusfarm.updateInfo("Collapsed, Farm Fruit")
            end
            if getgenv().mapdefault == "Lucky Block Area" then
                local v17 = v1.Directory.Areas[getgenv().mapdefault]
                if v1.WorldCmds.Get() ~= v17.world then
                    teleportto(getgenv().mapdefault)
                else
                    plr.Character.HumanoidRootPart.CFrame = vitrilucky[tostring(_G.vitribanchon)]
                end
                for i,v in pairs(autoupdate2()) do
                    Client.Network.Invoke('Join Coin', v, {i})
                    Client.Network.Fire('Farm Coin', v, i)
                end
            else
                local v17 = v1.Directory.Areas[getgenv().mapdefault]
                if v1.WorldCmds.Get() ~= v17.world then
                    getgenv().dbuoiboost = false
                else
                    if getgenv().dbuoiboost == false then
                        isbooster()
                        getgenv().dbuoiboost = true
                    end
                end
                if getgenv().mapdefault ~= "Mystic Mine" then
                    if v1.WorldCmds.Get() == v17.world and adudarkqua[getgenv().mapdefault] and adudarkqua[getgenv().mapdefault] ~= nil then
                        if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - adudarkqua[getgenv().mapdefault]).Magnitude > 20 then
                            plr.Character.HumanoidRootPart.CFrame = CFrame.new(adudarkqua[getgenv().mapdefault]) * CFrame.new(0,10,0)
                        end
                    else
                        teleportto(getgenv().mapdefault)
                    end
                else
                    if v1.WorldCmds.Get() == v17.world then
                        if (getgenv().vitrimapgem[getgenv().chonvitri].Position - plr.Character.HumanoidRootPart.Position).Magnitude > 20 then
                            plr.Character.HumanoidRootPart.CFrame = getgenv().vitrimapgem[getgenv().chonvitri]
                        end
                    else
                        teleportto(getgenv().mapdefault)
                    end
                end
                Statusfarm.updateInfo("Auto Farm map: " .. getgenv().mapdefault)
                Gem.updateInfo(tostring(get("Diamonds")))
                Fruit.updateInfo(tostring(checkfruit()))
                for i,v in pairs(autoupdate2()) do
                    Client.Network.Invoke('Join Coin', v, {i})
                    Client.Network.Fire('Farm Coin', v, i)
                end
            end
        end
    end
    
    local itemboost = {
        "Triple Coins",
        "Triple Damage",
        "Super Lucky",
        "Ultra Lucky"
    }
    
    function getboost()
        local v48 = v1.Save.Get();
        for i,v in pairs(v48.BoostsInventory) do
            if tonumber(v) ~= 0 then
                Client.Network.Fire("Activate Boost",i)
            end
        end
    end
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    -- (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(9021.90234375, -13.249011993408203, 2506.343994140625)).Magnitude
    -- function autowalk()
    --     if getgenv().autowalkne == true then
    --         humanoid:MoveTo(adudarkqua[getgenv().mapdefault])
    --     end
    -- end
    
    radius = 80
    speed = 20
    angle = 0
    
    spawn(function()
        while true do wait()
            local a,b = pcall(function()
                if getgenv().autowalkne == true then
                    controls:Enable() 
                    if game:GetService("Workspace").__MAP.Areas:FindFirstChild("Mystic Mine") then
                        for i,v in pairs(game:GetService("Workspace").__MAP.Areas:FindFirstChild("Mystic Mine"):GetChildren()) do
                            if v.Name == "Meshes/All_assets_Runic.001" then
                                v:Destroy()
                            end
                        end
                    end
                    local v17 = v1.Directory.Areas[getgenv().mapdefault]
                    if v1.WorldCmds.Get() == v17.world then
                        done = false
                        local player = game.Players.LocalPlayer
                        local center = adudarkqua[getgenv().mapdefault]
                        angle = angle + speed
                        if angle >= 360 then
                            angle = angle - 360
                        end
                        local radians = math.rad(angle)
                        local x = center.X + radius * math.cos(radians)
                        local z = center.Z + radius * math.sin(radians)
                        local mag = (player.Character.HumanoidRootPart.Position - Vector3.new(x, center.Y, z)).Magnitude
                        local magngohem = (Vector3.new(x, center.Y, z) - ngohem[getgenv().mapdefault]).Magnitude
                        if angle ~= 20 then
                            if mag >= 40 then
                                print("AAAAA")
                                teleportto(getgenv().mapdefault)
                            end
                        else
                            if magngohem <= 40 and checkgaint() ~= false then
                                print("Giantsss")
                                player.Character.Humanoid.MoveToFinished:Connect(
                                    function()
                                        done = true
                                    end
                                )
                                repeat wait()
                                    player.Character.Humanoid:MoveTo(checkgaint()[2])
                                until done == true or getgenv().autowalkne == false or checkgaint() == false
                            end
                            if mag >= 150 then
                                print("AAAAAZ")
                                teleportto(getgenv().mapdefault)
                            end
                        end
                        player.Character.Humanoid:MoveTo(Vector3.new(x, center.Y, z))
                        player.Character.Humanoid.MoveToFinished:Connect(
                            function()
                                done = true
                            end
                        )
                        repeat wait()
                            player.Character.Humanoid:MoveTo(Vector3.new(x, center.Y, z))
                        until done == true or getgenv().autowalkne == false
                        wait(0.1)
                    else
                        teleportto(getgenv().mapdefault)
                        wait(10)
                    end
                else
                    radius = 80
                    speed = 20
                    angle = 0
                end
            end)
        end
    end)
    
    spawn(function()
        while true do wait(1)
            local a,b = pcall(getboost)
        end
    end)
    
    spawn(function()
        while true do wait(1)
            if getgenv().autowalkne then
                pcall(function()
                    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
                    wait(4)
                    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
                end)
            end
        end
    end)
    
    spawn(function()
        while true do wait(getgenv().tgianne)
            if not getgenv().startdc and not getgenv().collectdc and getgenv().sendgemnek == false and not getgenv().autocometnek then
                local a,b = pcall(aasda)
                print(a,b)
            end
        end
    end)
    
    spawn(function()
        while true do wait()
            if getgenv().resetfruit30min then
                if getgenv().startresetfruit == false then
                    local tickna = tick()
                    repeat wait(1)
                        Error2.updateInfo("Wait Farm reset fruit: " .. tostring(math.floor(tick() - tickna)) .. " s / " .. tostring(60 * 60) .. "s")
                    until tick() - tickna >= 60 * 60
                    getgenv().startresetfruit = true
                end
            end
        end
    end)
    
    function checkfruit()
        soluong = 0
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Main.Boosts:GetChildren()) do
            if v.Name == "Orange" or v.Name == "Apple" then
                local zad = string.gsub(v.TimeLeft.Text , "x" ,"")
                soluong = soluong + tonumber(zad)
            end
        end
        return soluong
    end
    
    getgenv().farmmerne = false
    getgenv().checkedfruit = false
    -- getgenv().Sv
    spawn(function()
        while true do wait()
            pcall(function()
                if getgenv().checkmycollect == false then
                    if getgenv().startresetfruit == true then
                        getgenv().mapdefault = getgenv().areafarm1
                        local tickne = tick()
                        repeat wait(1)
                            Error2.updateInfo("Farm reset fruit: " .. tostring(math.floor(tick() - tickne)) .. "s / 60s")
                        until tick() - tickne > 60
                        getgenv().startresetfruit = false
                    else
                        if getgenv().farmabcxyz == "double" then
                            if getgenv().methodchange == "So Luong Fruit" then
                                if getgenv().checkmycollect == false then
                                    if getgenv().methodfarmfruit == "1" then
                                        if checkfruit() < getgenv().timemap1 then
                                            getgenv().mapdefault = getgenv().areafarm1
                                            getgenv().checkedfruit = false
                                        end
                                        if checkfruit() > getgenv().timemap1 and getgenv().checkedfruit ~= false then
                                            getgenv().mapdefault = getgenv().areafarm2
                                        end
                                        if checkfruit() >= getgenv().timemap2 then
                                            getgenv().mapdefault = getgenv().areafarm2
                                            getgenv().checkedfruit = true
                                        end
                                    else
                                        -- pet cac
                                        if checkfruit() < getgenv().timemap1 then
                                            Error.updateInfo("Farm fruit")
                                            getgenv().mapdefault = getgenv().areafarm1
                                            getgenv().Sv.fruitstatus = true
                                            savesetting()
                                        end
                                        if (checkfruit() >= getgenv().timemap2) or getgenv().Sv.fruitstatus == false then
                                            Error.updateInfo("Farm gem")
                                            getgenv().mapdefault = getgenv().areafarm2
                                            getgenv().Sv.fruitstatus = false
                                            savesetting()
                                        end
                                    end
                                else
                                    getgenv().mapdefault = getgenv().areafarm1
                                end
                                -- if checkfruit() >= getgenv().timemap2 then
                                --     if checkhavechest() == false then
                                --         getgenv().farmmerne = true
                                --         getgenv().mapdefault = getgenv().areafarm2
                                --         getgenv().checkedfruit = true
                                --     else
                                --         getgenv().mapdefault = "Mystic Mine"
                                --         getgenv().checkedfruit = true
                                --     end
                                -- end
                                -- if checkfruit() < getgenv().timemap1 or getgenv().checkedfruit == true then
                                --     if getgenv().farmmerne == true then
                                --         if checkfruit() <= getgenv().timemap1 then
                                --             getgenv().mapdefault = getgenv().areafarm1
                                --             getgenv().farmmerne = false
                                --             getgenv().checkedfruit = false
                                --         end
                                --     end
                                --     if getgenv().farmmerne == false then
                                --         getgenv().mapdefault = getgenv().areafarm1
                                --     end
                                -- end
                            else
                                local map1 = tick()
                                repeat wait()
                                    getgenv().mapdefault = getgenv().areafarm1
                                until tick() - map1 >= getgenv().timemap1 * 60
                                local map2 = tick()
                                repeat wait()
                                    getgenv().mapdefault = getgenv().areafarm2
                                until tick() - map2 >= getgenv().timemap2 * 60
                            end
                        else
                            getgenv().mapdefault = getgenv().areafarm1
                        end
                    end
                else
                    getgenv().mapdefault = "Axolotl Deep Ocean"
                end
            end)
        end
    end)
    
    local Orbs = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Orbs)
    local Lootbags = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Lootbags)
    function lootbag(v1)
        Lootbags.Collect(v1)
    end
    function lootorb(v1)
        Orbs.Collect(v1)
    end
    if getgenv().methodhutgem == "Old" then
        workspace.__THINGS.Orbs.ChildAdded:Connect(function(v)
            pcall(lootorb(v))
        end)
        workspace.__THINGS.Lootbags.ChildAdded:Connect(function(v)
            pcall(lootbag(v))
        end)
    else
        spawn(function()
            pcall(function()
                while true do wait(.2)
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
                            v.CanCollide = false
                            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                        end
                    end)
                end
            end)
        end)
        
        spawn(function()
            pcall(function()
                while true do wait(.2)
                    pcall(function()
                        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetChildren()) do
                            v.CanCollide = false
                            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
                        end
                    end)
                end
            end)
        end)
    end
    
    function GetEquippedPets()
        return Client.PetCmds.GetEquipped() 
    end
    
    function ahih1i(num)
        if num == 0 then
            return
        end
        local v48 = v1.Save.Get()
        local petmain = {}
        local petblacklist = {}
        getgenv().resultpet = {}
        for i,v in pairs(GetEquippedPets()) do
            table.insert(petblacklist, v.uid)
        end
        for i,v in pairs(v48.Pets) do 
            if tablefind(petblacklist , v48.Pets[i]["uid"]) == false then
                local checkne = v1.Directory.Pets[v48.Pets[i]["id"]]
                if checkne.rarity ~= "Event" and checkne.rarity ~= "Exclusive" and (v48.Pets[i].l == nil or v48.Pets[i].l == false) then
                    table.insert(petmain, {tonumber(v48.Pets[i]["s"]), v48.Pets[i]["uid"]})
                end
            end
        end
    
        numreal = num
    
        for i =1 , numreal do 
            local index = 0
            local maxmath = -math.huge
            for j = 1 , #petmain do
                if maxmath < petmain[j][1] then
                    maxmath = petmain[j][1]
                    jack5triu = petmain[j][2]
                    index = j
                end
            end
            table.insert(getgenv().resultpet , jack5triu)
            table.remove(petmain , index)
        end
        return getgenv().resultpet
    end
    
    function candaycarene()
        local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
        local v65 = v1.Save.Get()
        if v1.Shared.IsHardcore then
            v67 = v65.DaycareHardcoreQueue
        else
            v67 = v65.DaycareQueue
        end
        return #v67
    end
    
    function isuidc()
        return game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Enabled 
    end
    
    function petandlot()
        return game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Visible
    end
    
    function after1pet()
        return game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Holder2Stage2.Visible
    end
    
    local enroll1 = game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.Categories.EnrollPets.Frame.OpenEnrollMenu
    local enrollne = game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Side.EnrollStage12
    
    function getfirstclick(tablene)
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.HolderStage1:GetChildren()) do
            if v:IsA("TextButton") and tablefind(tablene, v.Name) then
                return v
            end
        end
    end
    
    function dccheck()
        if game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled then
            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Put these pets in daycare? They cannot be taken out early!" then
                return true
            end
        end
        return false
    end
    
    function autodaycare()
        if candaycarene() == 0 then
            getgenv().startdc = true
            if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
                teleportto("Spawn")
            end
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(35,100,40)
            controls:Disable()
            if isuidc() then
                if petandlot() then
                    if after1pet() == false then
                        clickman(getfirstclick(ahih1i(10)))
                    else
                        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Daycare.Frame.PetsAndLoot.Holder1Stage2:GetChildren()) do
                            if v:IsA("TextButton") and tablefind(ahih1i(10), v.Name) then
                                if v.Equipped.Visible ~= true then
                                    clickman(v)
                                    wait(1)
                                end
                            end
                        end
                        wait(2)
                        clickman(enrollne)
                        wait(2)
                        if dccheck() then
                            clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                        end
                    end
                else
                    clickman(enroll1)
                end
            end
        else
            getgenv().startdc = false
        end
    end
    
    function candaycare()
        local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
        local v65 = v1.Save.Get()
        if v1.Shared.IsHardcore then
            v67 = v65.DaycareHardcoreQueue
        else
            v67 = v65.DaycareQueue
        end
        for i,v in pairs(v67) do
            return true
        end
        return false
    end
    
    function gettime()
        access = false
        local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
        local v65 = v1.Save.Get()
        if v1.Shared.IsHardcore then
            v67 = v65.DaycareHardcoreQueue
        else
            v67 = v65.DaycareQueue
        end
        for i,v in pairs(v67) do
            local u13 = v1.Shared.DaycareComputeRemainingTime(v65, v67[i])
            access = true
            if u13 > 4 then
                return false
            end
        end
        if access == false then
            return false
        end
    end
    
    
    -- getgenv().collectdc = false
    -- getgenv().startdc = false
    -- getgenv().hascollectdaycare = false
    
    -- function collectdaycare()
    --     if getgenv().hascollectdaycare == false then
    --         local timecl = tick()
    --         repeat wait()
    --         until tick() - timecl >= 20 * 60
    --         getgenv().hascollectdaycare = true
    --     end
    --     if gettime() ~= false and candaycare() then
    --         getgenv().collectdc = true
    --         teleportto("Spawn")
    --         if not game:GetService("Workspace")["__MAP"].Interactive:FindFirstChild("Daycare") then
    --             teleportto("Spawn")
    --         end
    --         plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["__MAP"].Interactive.Daycare.Pad.CFrame
    --         Client.Network.Invoke("Daycare: Claim", nil)
    --     else
    --         getgenv().collectdc = false
    --     end
    -- end
    
    -- spawn(function()
    --     while true do wait(3)
    --         if candaycarene() == 0 and getgenv().autodaycare and not getgenv().autocometnek then
    --             print("A")
    --             getgenv().autowalkne = false
    --             local a,b = pcall(autodaycare)
    --             print(a,b)
    --         else
    --             getgenv().startdc = false
    --         end
    --     end
    -- end)
    
    -- spawn(function()
    --     while true do wait(5)
    --         if candaycare() and gettime() ~= false and getgenv().sendgemnek == false and not getgenv().autocometnek then
    --             print("B")
    --             getgenv().autowalkne = false
    --             pcall(collectdaycare)
    --         else
    --             getgenv().collectdc = false
    --         end
    --     end
    -- end)
    
    local Save = v1.Save.Get
    local Commas = v1.Functions.Commas
    
    function get(thistype)
        if game.PlaceId == 10321372166 and string.find(string.lower(thistype), "coins") then
            return Save().HardcoreCurrency[thistype]
        else
            return Save()[thistype]
        end
    end
    
    function ComposeMail(name,Diamond,pets)    
        return {
            Recipient = tostring(name), 
            Message = "Quanh Dz",
            Pets = {pets}, 
            Diamonds = tonumber(Diamond),
        };
    end;
    
    -------- website
    function status()
        local res = request({
            Url = (host .. "/user/get/%d"):format(game.Players.LocalPlayer.UserId),
            Method = "GET"
        })
        return res
    end
    
    function iduser()
        return game.Players.LocalPlayer.UserId
    end
    function nameuser()
        return game.Players.LocalPlayer.Name
    end
    
    function namegame()
        return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    end
    
    function jobid()
        return game.JobId
    end
    
    function getstatus(aa)
        if getgenv().setmain == true then
            return "MainAccount|" .. aa
        else
            return aa
        end
    end
    
    function connect(a,b,c,d,f,g)
        ws:Send(game:GetService("HttpService"):JSONEncode({
            Mode = "Connect",
            Id = a,
            Name = b,
            Game = c,
            JobId = d,
            Cooldown = f,
            Info = g
        }))
    end
    
    function edit(a,b,c,d,f,g)
        ws:Send(game:GetService("HttpService"):JSONEncode({
            Mode = "Edit",
            Id = a,
            Name = b,
            Game = c,
            JobId = d,
            Cooldown = f,
            Info = g
        }))
    end
    function connecta()
        if status().StatusCode == 404 then
            connect(iduser(), nameuser(), namegame(), jobid(), 0,0,getstatus("NewServer"))
        end
    end
    
    -- local ticknek = tick()
    
    -- repeat wait(3)
    --     connecta()
    -- until status().StatusCode == 200 or tick() - ticknek >= 10
    
    -- if status().StatusCode ~= 200 then
    --     plr:Kick("Cannot Connect To Server!")
    -- end
    
    function getinfonek()
        local res = request({
            Url = host.."/user/get",
            Method = "GET"
        })
        local data = game:GetService("HttpService"):JSONDecode(res.Body)
        return data
    end
    
    function getinfouser(abcne)
        local res = request({
            Url = (host.."/user/get/%d"):format(abcne),
            Method = "GET"
        })
        local data = game:GetService("HttpService"):JSONDecode(res.Body)
        return data
    end
    
    function getdata2()
        for i,v in pairs(getinfonek()) do
            local a = string.split(v.Info, "|")
            if a[1] == "MainAccount" and v.Status == true then
                return {a[2], v.JobId, v.Id}
            end
        end
        return false
    end
    
    function getlocationbuy(adudark)
        for i,v in pairs(game:GetService("Workspace").__MAP.Interactive.Booths:GetDescendants()) do
            if v:IsA("Frame") then
                if v.Name == adudark then
                    return v.Parent.Parent.Parent.CFrame
                end
            end
        end
    end
    
    function ahihidongok()
        for i,v in pairs(Client.Network.Invoke("Get All Booths")) do
            if v.Owner == getdata2()[3] then
                for i1,v1 in pairs(v["Listings"]) do
                    return {tonumber(i), i1, v1["Price"]}
                end
            end
        end
        return false
    end
    
    ------
    
    function sendneknek(a,b)
        print("adubuqua")
        print(Client.Network.Invoke("Send Mail",ComposeMail(a,b)))
    end
    
    local vitricuabank = Vector3.new(231.22198486328125, 98.11483001708984, 358.1041259765625)
    local v48 = v1.Save.Get()
    function havenearbank()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name ~= plr.Name then
                if (v.Character.HumanoidRootPart.Position - vitricuabank).Magnitude < 50 then
                    return true
                end
            end
        end
        return false
    end
    function checkisbank()
        return game:GetService("Players").LocalPlayer.PlayerGui.Bank.Enabled
    end
    function tweenfarasm(targetPos, targetCFrame)
        local gay = (targetPos-game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        local Tween = game:GetService('TweenService'):Create(
            game.Players.LocalPlayer.Character.HumanoidRootPart,
            TweenInfo.new(
                gay / 50, 
                Enum.EasingStyle.Linear
            ),
            {CFrame = targetCFrame * CFrame.new(0,0,0)}
        )
        Tween:Play()
        Tween.Completed:Wait()
    end 
    function getmybank()
        if getgenv().doneleave ~= true then
            for i,v in pairs(Client.Network.Invoke("Get My Banks")) do
                return v.BUID
            end
        end
        return false
    end
    local vitrirs = Vector3.new(232.1697235107422, 98.11483001708984, 312.91363525390625)
    local vitribank = Vector3.new(229.9514923095703, 98.11483001708984, 360.9400329589844)
    function checknearbank()
        if (plr.Character.HumanoidRootPart.Position - vitribank).Magnitude < 10 then
            return true
        end
        return false
    end
    
    local v17 = v1.Directory.Areas["Shop"]
    function autofixUI()
        if checknearbank() and checkisbank() == false then
            tweenfarasm(vitrirs,CFrame.new(vitrirs))
            tweenfarasm(vitribank,CFrame.new(vitribank))
        end
    end
    function teleportto(texta)
        print(hihi.Teleport(texta,true))
    end
    function fireButton1(button)
        for i,signal in next, getconnections(button.Activated) do 
            signal:Function()
        end
    end
    function clickman(a)
        spawn(function()
            fireButton1(a)
        end)
    end
    function getinvite()
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
            if string.find(v.Name, "INVITE") then
                local a = string.gsub(v.Player.Text, "@", "")
                if a == getgenv().Nameaccmain then
                    return v
                end
            end
        end
        return false
    end
    function stringfind(a,b)
        if string.find(a,b) then
            return true
        end
        return false
    end
    function getinvite2()
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Side.Holder:GetChildren()) do
            if not stringfind(v.Name, "INVITE") then
                if string.len(v.Name) > 30 then
                    if v.Owner.Text == tostring("@" .. getgenv().Nameaccmain) then
                        return v
                    end
                end
            end
        end
        return false
    end
    function ismes()
        return game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled
    end
    local v17 = v1.Directory.Areas["Shop"]
        -- function sendgem11()
        --     if get("Diamonds") >= getgenv().soluonggem + 100000 then
        --         Client.Network.Invoke("Buy Trading Plaza")
        --         getgenv().sendgemnek = true
        --         teleportto("Shop")
        --         wait(5)
        --         plr.Character.HumanoidRootPart.CFrame = CFrame.new(257.4012756347656, 97.88801574707031, 351.0747985839844)
        --         controls:Disable()
        --         wait(1)
        --         sendneknek(getgenv().Nameaccmain,get("Diamonds") - 100000)
        --     else
        --         getgenv().sendgemnek = false
        --     end
        -- end
    
    function sendgem11()
        if get("Diamonds") >= getgenv().soluonggem then
            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Enabled == true then
                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
            end
            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
            end
            getgenv().sendgemnek = true
            if v1.WorldCmds.Get() == v17.world then
                if getmybank() == false then
                    if checkisbank() == false then
                        if v1.WorldCmds.Get() == v17.world then
                            autofixUI()
                            if not checknearbank() then
                                tweenfarasm(vitribank,CFrame.new(vitribank))
                            end
                        else
                            teleportto("Shop")
                        end
                    else
                        if not checknearbank() then
                            tweenfarasm(vitribank,CFrame.new(vitribank))
                        else
                            if getinvite() ~= false then
                                clickman(getinvite())
                            end
                            wait(5)
                            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Do you want to accept this invite?" then
                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                            else
                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
                            end
                            wait(2)
                            if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                            end
                            wait(10)
                            Client.Network.Invoke("Bank Deposit",getmybank(),{} ,get("Diamonds"))
                        end
                    end
                end
            else
                teleportto("Shop")
            end
        else
            if getmybank() then
                getgenv().sendgemnek = true
                if v1.WorldCmds.Get() == v17.world then
                    if checkisbank() == false then
                        if v1.WorldCmds.Get() == v17.world then
                            autofixUI()
                            if not checknearbank() then
                                tweenfarasm(vitribank,CFrame.new(vitribank))
                            end
                        else
                            teleportto("Shop")
                        end
                    else
                        if not checknearbank() then
                            tweenfarasm(vitribank,CFrame.new(vitribank))
                        else
                            if getinvite2() ~= false then
                                clickman(getinvite2()) 
                                wait(3)
                                clickman(game:GetService("Players").LocalPlayer.PlayerGui.Bank.Frame.Container.Bank.Bottom.Leave)
                                wait(3)
                                if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Are you sure you want to leave this bank?" then
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
                                    wait(2)
                                    getgenv().doneleave = true
                                else
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.No)
                                end
                                wait(2)
                                if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                                end
                                wait(10)
                            end
                        end
                    end
                else
                    if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                        clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                    end
                    teleportto("Shop")
                end
            else
                if game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Desc.Text == "Success! You are now a member." then
                    clickman(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Ok)
                end
                getgenv().sendgemnek = false
            end
        end
        -- if getgenv().methodsendgem == "New" then
        --     if get("Diamonds") >= getgenv().soluonggem + 100000 then
        --         getgenv().sendgemnek = true
        --         if getdata2()[1] == "StartForBuy" then
        --             if v1.Shared.IsTradingPlaza then
        --                 print(getdata2()[2], game.JobId)
        --                 if getdata2()[2] ~= game.JobId then
        --                     print("cac")
        --                     edit(iduser(), nameuser(), namegame(), jobid(),0,getstatus("Joining Main Account"))
        --                     game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,getdata2()[2], game.Players.LocalPlayer)
        --                 else
        --                     if (plr.Character.HumanoidRootPart.Position - getlocationbuy(ahihidongok()[2]).Position).Magnitude > 5 then
        --                         plr.Character.HumanoidRootPart.CFrame = getlocationbuy(ahihidongok()[2])
        --                     end
        --                     wait(2)
        --                     print(Client.Network.Invoke("Purchase Trading Booth Pet", ahihidongok()[1], ahihidongok()[2], ahihidongok()[3]))
        --                 end
        --             else
        --                 edit(iduser(), nameuser(), namegame(), jobid(),0,getstatus("Joining Traing Server"))
        --                 Client.Network.Invoke("Travel to Trading Plaza", "DEFAULT")
        --             end
        --         end
        --     else
        --         if v1.Shared.IsTradingPlaza then
        --             local ts = game:GetService("TeleportService")
        --             local p = game:GetService("Players").LocalPlayer
        --             ts:Teleport(6284583030, p)
        --         end
        --         getgenv().sendgemnek = false
        --     end
        -- else
        --     if get("Diamonds") >= getgenv().soluonggem + 100000 then
        --         getgenv().sendgemnek = true
        --         teleportto("Shop")
        --         wait(5)
        --         plr.Character.HumanoidRootPart.CFrame = CFrame.new(257.4012756347656, 97.88801574707031, 351.0747985839844)
        --         wait(1)
        --         sendneknek(getgenv().Nameaccmain,getgenv().soluonggem)
        --     else
        --         getgenv().sendgemnek = false
        --     end
        -- end
    end
    
    function getcommet()
        if getgenv().autocomet then
            local getcomets = Client.Network.Invoke("Comets: Get Data")
            for i,v in pairs(getcomets) do
                if getcomets[i].AreaId ~= "Town" and v1.WorldCmds.HasArea(getcomets[i].AreaId) then
                    return {getcomets[i].CoinId , getcomets[i].AreaId, getcomets[i].EndPosition}
                end
            end
        end
        return false
    end
    
    function farmcometnez()
        if getgenv().autocometnek then
            getgenv().autowalkne = false
            if not game:GetService("Workspace")["__THINGS"].Coins:FindFirstChild(getcommet()[1]) then
                teleportto(getcommet()[2])
            else
                for i1,v1 in pairs(Client.PetCmds.GetEquipped()) do
                    if getcommet() ~= false then
                        Client.Network.Invoke('Join Coin', getcommet()[1], {v1.uid})
                        Client.Network.Fire('Farm Coin', getcommet()[1], v1.uid)
                    end
                end
            end 
        end
    end
    
    spawn(function()
        while true do wait(1)
            if getcommet() ~= false and getgenv().autocomet then
                getgenv().autocometnek = true
                pcall(farmcometnez)
            else
                getgenv().autocometnek = false
            end
        end
    end)
    
    spawn(function()
        while true do wait(5)
            if getgenv().autosendgem and not getgenv().autocometnek then
                local a,b = pcall(sendgem11)
                print(a,b)
            else
                getgenv().sendgemnek = false
            end
        end
    end)
    
    function toiuu()
        if getgenv().boostnow then
            for i,v in next, workspace:GetDescendants() do
                pcall(function()
                    v.Transparency = 1
                end)
            end
            for i,v in next, getnilinstances() do
                pcall(function()
                    v.Transparency = 1
                    for i1,v1 in next, v:GetDescendants() do
                        v1.Transparency = 1
                    end
                end)
            end
            local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
            local g = game
            local w = g.Workspace
            local l = g.Lighting
            local t = w.Terrain
            pcall(function()
                sethiddenproperty(l,"Technology",2)
                sethiddenproperty(t,"Decoration",false)
            end)
            t.WaterWaveSize = 0
            t.WaterWaveSpeed = 0
            t.WaterReflectance = 0
            t.WaterTransparency = 0
            l.GlobalShadows = 0
            l.FogEnd = 9e9
            l.Brightness = 0
            settings().Rendering.QualityLevel = "Level01"
            for i, v in pairs(w:GetDescendants()) do
                if v:IsA("BasePart") and not v:IsA("MeshPart") then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
                    v.Transparency = 1
                elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                    v.Lifetime = NumberRange.new(0)
                elseif v:IsA("Explosion") then
                    v.BlastPressure = 1
                    v.BlastRadius = 1
                elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                    v.Enabled = false
                elseif v:IsA("MeshPart") and decalsyeeted then
                    v.Material = "Plastic"
                    v.Reflectance = 0
                    v.TextureID = 10385902758728957
                elseif v:IsA("SpecialMesh") and decalsyeeted  then
                    v.TextureId=0
                elseif v:IsA("ShirtGraphic") and decalsyeeted then
                    v.Graphic=0
                elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
                    v[v.ClassName.."Template"]=0
                end
            end
            for i = 1,#l:GetChildren() do
                e=l:GetChildren()[i]
                if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                    e.Enabled = false
                end
            end
        end
    end
    
    toiuu()
    
    if getgenv().whitescreen then
        local RunService = game:GetService("RunService")
        RunService:Set3dRenderingEnabled(false)
    else
        local RunService = game:GetService("RunService")
        RunService:Set3dRenderingEnabled(true)
    end
    
    game.NetworkClient.ChildRemoved:Connect(function()
        game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
    end)
    
    game.Players.PlayerRemoving:connect(function(plr)
        if plr == game.Players.LocalPlayer then
            game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
        end
    end)
    
    spawn(function()
        while true do wait(60)
            if getgenv().autodaily then
                for i = 1 , 12 do
                    Client.Network.Invoke("Redeem Free Gift", i)
                    wait(2)
                end
            end
        end
    end)
    end
    spawn(function()
        while true do wait(5 * 60)
            pcall(function()
                local humanoid = game.Players.LocalPlayer.Character.Humanoid
                local character = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                humanoid:MoveTo(Vector3.new(character.X, character.Y,character.Z + 30))
            end)
        end
    end)
    getgenv().checkedload = 0
    spawn(function()
        while true do wait(1)
            if game:GetService("Players").LocalPlayer.PlayerGui.Loading.Enabled == true then
                getgenv().checkedload = getgenv().checkedload + 1
            else
                getgenv().checkedload = getgenv().checkedload - 1
            end
            if getgenv().checkedload >= 100 then
                game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
            end
        end
    end)
    
    spawn(function()
        repeat wait() until game.CoreGui:FindFirstChild('RobloxPromptGui')
        local lp,po,ts = game:GetService('Players').LocalPlayer,game.CoreGui.RobloxPromptGui.promptOverlay,game:GetService('TeleportService')
        po.ChildAdded:connect(function(a)
            if a.Name == 'ErrorPrompt' then
                repeat
                    ts:Teleport(game.PlaceId)
                    wait(2)
                until false
            end
        end)
    end)
    return lib
end
